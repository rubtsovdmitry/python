"""–ò–ì–†–ê –ú–û–†–°–ö–û–ô –ë–û–ô"""


import random, bext, playsound


class Sea_battle:
    """–ë–£–ö–í–ï–ù–ù–´–ï –ò –¶–ò–§–†–û–í–´–ï –ö–û–û–†–î–ò–ù–ê–¢–´"""
    letters = "–ê–ë–í–ì–î–ï–ñ–ó–ò–ö"                                                                                          
    letters_go = "  –ê–ë–í–ì–î–ï–ñ–ó–ò–ö"
    numbers = ("1", "2", "3", "4", "5", "6", "7", "8", "9", "10")
    """–ö–û–†–¢–ï–ñ –° –ö–û–†–ê–ë–õ–Ø–ú–ò"""
    ships = (4, 3, 3, 2, 2, 2, 1, 1, 1, 1)
    """–ó–ù–ê–ß–ö–ò –î–õ–Ø –ú–û–†–Ø"""
    sea_icon = "üü¶"
    sea_icon_block = "üü™"
    ship_icon = "‚öì"    
    hit_icon = "‚ùå"
    miss_icon = "‚ö™"    
    
    """–í –ö–û–ù–°–¢–†–£–ö–¢–û–†–ï –°–û–ó–î–ê–î–ò–ú –ê–¢–†–ò–ë–£–¢ –û–ë–™–ï–ö–¢–ê - –≠–¢–û –ò–ì–†–û–í–û–ï –ü–û–õ–ï, –û–î–ù–û –î–õ–Ø –†–ê–°–°–¢–ê–ù–û–í–ö–ò –ö–û–†–ê–ë–õ–ï–ô, –î–†–£–ì–û–ï –î–õ–Ø –•–û–î–û–í"""
    def __init__(self) -> None:                                                                                     
        self._field = self.__initialize()       
        self._field_go = self.__initialize()
        
    """–ú–ï–¢–û–î –î–õ–Ø –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –ü–ï–†–ï–ú–ï–ù–ù–´–• –î–õ–Ø –ö–û–ù–°–¢–†–£–ö–¢–û–†–ê __init__ (–ò–ù–ö–ê–ü–°–£–õ–ò–†–û–í–ê–ù–ù–´–ô)"""
    def __initialize(self):                                                                                         
        self.__field = {}
        n = 1
        for a in self.__class__.numbers:
            for b in self.__class__.letters:
                self.__field[str(a) + b] = [n, self.__class__.sea_icon]
                n += 1
        return self.__field

    """–ú–ï–¢–û–î, –ö–û–¢–û–†–´–ô –í–û–ó–í–†–ê–©–ê–ï–¢ –ò–ì–†–û–í–û–ï –ü–û–õ–ï –í –¢–ï–ö–£–©–ï–ú –°–û–°–¢–û–Ø–ù–ò–ò + –ü–û–õ–ï –° –•–û–î–ê–ú–ò (–í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–Ø –ò–ì–†–û–í–û–ô –û–ë–õ–ê–°–¢–ò)"""
    def show_field(self):                                                                                           
        for i in (self.__class__.letters + self.__class__.letters_go):
            print((i + " "), end="")
        print()            
        for a in self._field.values():           
            if a[0] % 10 != 0 and a[0] < 10:
                print(a[1], end="")
            elif a[0] == 10:
                print(a[1], int(a[0] / 10), end="")
        print("  ", end="")
        for a in self._field_go.values():           
            if a[0] % 10 != 0 and a[0] < 10:
                print(a[1], end="")
            elif a[0] == 10:
                print(a[1], int(a[0] / 10))
        for a in self._field.values():           
            if a[0] % 10 != 0 and 10 < a[0] < 20:
                print(a[1], end="")
            elif a[0] == 20:
                print(a[1], int(a[0] / 10), end="")
        print("  ", end="")
        for a in self._field_go.values():           
            if a[0] % 10 != 0 and 10 < a[0] < 20:
                print(a[1], end="")
            elif a[0] == 20:
                print(a[1], int(a[0] / 10))
        for a in self._field.values():           
            if a[0] % 10 != 0 and 20 < a[0] < 30:
                print(a[1], end="")
            elif a[0] == 30:
                print(a[1], int(a[0] / 10), end="")
        print("  ", end="")
        for a in self._field_go.values():           
            if a[0] % 10 != 0 and 20 < a[0] < 30:
                print(a[1], end="")
            elif a[0] == 30:
                print(a[1], int(a[0] / 10))
        for a in self._field.values():           
            if a[0] % 10 != 0 and 30 < a[0] < 40:
                print(a[1], end="")
            elif a[0] == 40:
                print(a[1], int(a[0] / 10), end="")
        print("  ", end="")
        for a in self._field_go.values():           
            if a[0] % 10 != 0 and 30 < a[0] < 40:
                print(a[1], end="")
            elif a[0] == 40:
                print(a[1], int(a[0] / 10))
        for a in self._field.values():           
            if a[0] % 10 != 0 and 40 < a[0] < 50:
                print(a[1], end="")
            elif a[0] == 50:
                print(a[1], int(a[0] / 10), end="")
        print("  ", end="")
        for a in self._field_go.values():           
            if a[0] % 10 != 0 and 40 < a[0] < 50:
                print(a[1], end="")
            elif a[0] == 50:
                print(a[1], int(a[0] / 10))
        for a in self._field.values():           
            if a[0] % 10 != 0 and 50 < a[0] < 60:
                print(a[1], end="")
            elif a[0] == 60:
                print(a[1], int(a[0] / 10), end="")
        print("  ", end="")
        for a in self._field_go.values():           
            if a[0] % 10 != 0 and 50 < a[0] < 60:
                print(a[1], end="")
            elif a[0] == 60:
                print(a[1], int(a[0] / 10))
        for a in self._field.values():           
            if a[0] % 10 != 0 and 60 < a[0] < 70:
                print(a[1], end="")
            elif a[0] == 70:
                print(a[1], int(a[0] / 10), end="")
        print("  ", end="")
        for a in self._field_go.values():           
            if a[0] % 10 != 0 and 60 < a[0] < 70:
                print(a[1], end="")
            elif a[0] == 70:
                print(a[1], int(a[0] / 10))
        for a in self._field.values():           
            if a[0] % 10 != 0 and 70 < a[0] < 80:
                print(a[1], end="")
            elif a[0] == 80:
                print(a[1], int(a[0] / 10), end="")
        print("  ", end="")
        for a in self._field_go.values():           
            if a[0] % 10 != 0 and 70 < a[0] < 80:
                print(a[1], end="")
            elif a[0] == 80:
                print(a[1], int(a[0] / 10))
        for a in self._field.values():           
            if a[0] % 10 != 0 and 80 < a[0] < 90:
                print(a[1], end="")
            elif a[0] == 90:
                print(a[1], int(a[0] / 10), end="")
        print("  ", end="")
        for a in self._field_go.values():           
            if a[0] % 10 != 0 and 80 < a[0] < 90:
                print(a[1], end="")
            elif a[0] == 90:
                print(a[1], int(a[0] / 10))
        for a in self._field.values():           
            if a[0] % 10 != 0 and 90 < a[0] < 100:
                print(a[1], end="")
            elif a[0] == 100:
                print(a[1], int(a[0] / 10), end="")
        print(" ", end="")
        for a in self._field_go.values():           
            if a[0] % 10 != 0 and 90 < a[0] < 100:
                print(a[1], end="")
            elif a[0] == 100:
                print(a[1], int(a[0] / 10))
            
    """–ú–ï–¢–û–î, –ö–û–¢–û–†–´–ô –ü–†–û–í–û–î–ò–¢ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–£–Æ –ü–†–û–í–ï–†–ö–£ –ü–†–ò –£–°–¢–ê–ù–û–í–ö–ï –¢–†–Å–•-–ü–ê–õ–£–ë–ù–´–• –ö–û–†–ê–ë–õ–ï–ô (–ò–ù–ö–ê–ü–°–£–õ–ò–†–û–í–ê–ù–ù–´–ô)"""
    def __arrange_ships_three(self, x, move):
        if move == "right":                                                                                                      # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ç—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫–ª–µ—Ç–∫–∏ –¥–ª—è –∫–æ—Ä–æ–±–ª—è –ø–æ-–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏            
            return True if [(x), self.__class__.sea_icon] in self._field.values() and \
                [(x + 1), self.__class__.sea_icon] in self._field.values() and \
                [(x + 2), self.__class__.sea_icon] in self._field.values() else False                                                                   
        elif move == "down":                                                                                                     # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ç—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫–ª–µ—Ç–∫–∏ –¥–ª—è –∫–æ—Ä–æ–±–ª—è –ø–æ-–≤–µ—Ä—Ç–∏–∫–∞–ª–∏
            return True if [(x), self.__class__.sea_icon] in self._field.values() and \
                [(x + 10), self.__class__.sea_icon] in self._field.values() and \
                [(x + 20), self.__class__.sea_icon] in self._field.values() else False                                                       
                    
    """–ú–ï–¢–û–î, –ö–û–¢–û–†–´–ô –ü–†–û–í–û–î–ò–¢ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–£–Æ –ü–†–û–í–ï–†–ö–£ –ü–†–ò –£–°–¢–ê–ù–û–í–ö–ï –î–í–£–•-–ü–ê–õ–£–ë–ù–´–• –ö–û–†–ê–ë–õ–ï–ô (–ò–ù–ö–ê–ü–°–£–õ–ò–†–û–í–ê–ù–ù–´–ô)"""
    def __arrange_ships_two(self, x, move):
        if move == "right":                                                                                                      # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –¥–≤–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–ª–µ—Ç–∫–∏ –¥–ª—è –∫–æ—Ä–æ–±–ª—è –ø–æ-–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
            return True if [(x), self.__class__.sea_icon] in self._field.values() and \
                [(x + 1), self.__class__.sea_icon] in self._field.values() else False                                                                        
        elif move == "down":                                                                                                     # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –¥–≤–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–ª–µ—Ç–∫–∏ –¥–ª—è –∫–æ—Ä–æ–±–ª—è –ø–æ-–≤–µ—Ä—Ç–∏–∫–∞–ª–∏
            return True if [(x), self.__class__.sea_icon] in self._field.values() and \
                [(x + 10), self.__class__.sea_icon] in self._field.values() else False                                                       
        
    """–ú–ï–¢–û–î, –ö–û–¢–û–†–´–ô –ü–†–û–í–û–î–ò–¢ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–£–Æ –ü–†–û–í–ï–†–ö–£ –ü–†–ò –£–°–¢–ê–ù–û–í–ö–ï –û–î–ù–û-–ü–ê–õ–£–ë–ù–´–• –ö–û–†–ê–ë–õ–ï–ô (–ò–ù–ö–ê–ü–°–£–õ–ò–†–û–í–ê–ù–ù–´–ô)"""
    def __arrange_ships_one(self, x):                                                                                                              
            return True if [(x), self.__class__.sea_icon] in self._field.values() else False                                     # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –¥–≤–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–ª–µ—Ç–∫–∏ –¥–ª—è –∫–æ—Ä–æ–±–ª—è –ø–æ-–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏                                                                                                         
            
    """–ú–ï–¢–û–î, –ö–û–¢–û–†–´–ô –†–ê–°–°–¢–ê–í–õ–Ø–ï–¢ –ö–û–†–ê–ë–õ–ò –ù–ê –ò–ì–†–û–í–û–ú –ü–û–õ–ï"""
    def arrange_ships(self):
        for i in self.__class__.ships:                                                                                           # –æ–±—Ö–æ–¥–∏–º –≤ —Ü–∏–∫–ª–µ –∫–æ—Ä—Ç–µ–∂ —Å –∫–æ—Ä–∞–±–ª—è–º–∏
            if i == 4:                                                                                                           # —É—Å–ª–æ–≤–∏–µ –¥–ª—è —á–µ—Ç—ã—Ä–µ—Ö-–ø–∞–ª—É–±–Ω–æ–≥–æ
                while True:                                                                                                      # —Ü–∏–∫–ª –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –ø–æ–∫–∞ –Ω–µ –±—É–¥—É—Ç –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–∞–±–ª—è                
                    x = random.randint(1, 100)                                                                                   # —Ä–∞–Ω–¥–æ–º–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –≤ —Ü–∏–∫–ª–µ –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Ç–æ—á–∫–∞
                    move = random.choice(["right", "down"])                                                                      # –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–∞–±–ª—è –∏–∑ —Ç–æ—á–∫–∞ (–Ω–∞–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–Ω–∏–∑)
                    if move == "right" and 0 < int(str(x)[-1]) <= 7:                                                             # –ø–µ—Ä–≤–æ–µ —É—Å–ª–æ–≤–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∫–æ—Ä–∞–±–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ
                        for a, b in self._field.items():                                                                         # –≤ —Ü–∏–∫–ª–µ –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ, –∫–ª–µ—Ç–∫–∏ —Å –∫–æ—Ä–∞–±–ª—è–º–∏ –∏ –º–æ—Ä–µ–º –≤–æ–∫—Ä—É–≥ –∫–æ—Ä–∞–±–ª–µ–π –º–µ–Ω—è—é—Ç —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è
                            if b[0] == x:                                                        
                                self._field[a] = [x, self.__class__.ship_icon]                                       
                            if b[0] == x + 1:   
                                self._field[a] = [x + 1, self.__class__.ship_icon]                                
                            if b[0] == x + 2:   
                                self._field[a] = [x + 2, self.__class__.ship_icon]                                
                            if b[0] == x + 3:   
                                self._field[a] = [x + 3, self.__class__.ship_icon]                                       
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 10) or \
                                b[0] == (x - 9) or b[0] == (x - 8) or b[0] == (x - 7) or \
                                b[0] == (x + 13) or b[0] == (x + 12) or \
                                b[0] == (x + 11) or b[0] == (x + 10) else self._field[a]                                         # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –≤–µ—Ä—Ö–∞ –∏ –Ω–∏–∑–∞ –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 6) \
                                and str(b[0])[-1] != "1" or b[0] == (x + 4) and str(b[0])[-1] != "1" \
                                or b[0] == (x + 14) and str(b[0])[-1] != "1" else self._field[a]                                 # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x + 9) \
                                and str(b[0])[-1] != "0" or b[0] == (x - 1) and str(b[0])[-1] != "0" \
                                or b[0] == (x - 11) and str(b[0])[-1] != "0" else self._field[a]                                 # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ª–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                        break
                    elif move == "down" and x <= 70:                                                                             # –≤—Ç–æ—Ä–æ–µ —É—Å–ª–æ–≤–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∫–æ—Ä–∞–±–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ
                        for a, b in self._field.items():                                                                         # –≤ —Ü–∏–∫–ª–µ –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ, –∫–ª–µ—Ç–∫–∏ —Å –∫–æ—Ä–∞–±–ª—è–º–∏ –∏ –º–æ—Ä–µ–º –≤–æ–∫—Ä—É–≥ –∫–æ—Ä–∞–±–ª–µ–π –º–µ–Ω—è—é—Ç —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è
                            if b[0] == x:                                                        
                                self._field[a] = [x, self.__class__.ship_icon]                                 
                            if b[0] == x + 10:   
                                self._field[a] = [x + 10, self.__class__.ship_icon]                                
                            if b[0] == x + 20:   
                                self._field[a] = [x + 20, self.__class__.ship_icon]                                
                            if b[0] == x + 30:   
                                self._field[a] = [x + 30, self.__class__.ship_icon]                                                            
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 10) or \
                                b[0] == (x + 40) else self._field[a]                                                             # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –≤–µ—Ä—Ö–∞ –∏ –Ω–∏–∑–∞ –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 9) \
                                and str(b[0])[-1] != "1" or b[0] == (x + 1) and str(b[0])[-1] != "1" or \
                                b[0] == (x + 11) and str(b[0])[-1] != "1" or \
                                b[0] == (x + 21) and str(b[0])[-1] != "1" or \
                                b[0] == (x + 31) and str(b[0])[-1] != "1" or \
                                b[0] == (x + 41) and str(b[0])[-1] != "1" else self._field[a]                                    # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x + 39) \
                                and str(b[0])[-1] != "0" or b[0] == (x + 29) and str(b[0])[-1] != "0" or \
                                b[0] == (x + 19) and str(b[0])[-1] != "0" or \
                                b[0] == (x + 9) and str(b[0])[-1] != "0" or \
                                b[0] == (x - 1) and str(b[0])[-1] != "0" or \
                                b[0] == (x - 11) and str(b[0])[-1] != "0" else self._field[a]                                    # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ª–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                        break
            if i == 3:                                                                                                           # —É—Å–ª–æ–≤–∏–µ –¥–ª—è —Ç—Ä—ë—Ö-–ø–∞–ª—É–±–Ω–æ–≥–æ
                while True:                                                                                                      # —Ü–∏–∫–ª –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –ø–æ–∫–∞ –Ω–µ –±—É–¥—É—Ç –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–∞–±–ª—è                
                    x = random.randint(1, 100)                                                                                   # —Ä–∞–Ω–¥–æ–º–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –≤ —Ü–∏–∫–ª–µ –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Ç–æ—á–∫–∞                    
                    move = random.choice(["right", "down"])                                                                      # –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–∞–±–ª—è –∏–∑ —Ç–æ—á–∫–∞ (–Ω–∞–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–Ω–∏–∑)                    
                    if move == "right" and 0 < int(str(x)[-1]) <= 8 and self.__arrange_ships_three(x, move):                     # –ø–µ—Ä–≤–æ–µ —É—Å–ª–æ–≤–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∫–æ—Ä–∞–±–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ)
                        for a, b in self._field.items():                                                                         # –≤ —Ü–∏–∫–ª–µ –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ, –∫–ª–µ—Ç–∫–∏ —Å –∫–æ—Ä–∞–±–ª—è–º–∏ –∏ –º–æ—Ä–µ–º –≤–æ–∫—Ä—É–≥ –∫–æ—Ä–∞–±–ª–µ–π –º–µ–Ω—è—é—Ç —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è
                            if b[0] == x:                                                        
                                self._field[a] = [x, self.__class__.ship_icon]                                 
                            if b[0] == x + 1:   
                                self._field[a] = [x + 1, self.__class__.ship_icon]                                
                            if b[0] == x + 2:   
                                self._field[a] = [x + 2, self.__class__.ship_icon]  
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 10) or \
                                b[0] == (x - 9) or b[0] == (x - 8) or \
                                b[0] == (x + 12) or \
                                b[0] == (x + 11) or b[0] == (x + 10) else self._field[a]                                         # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –≤–µ—Ä—Ö–∞ –∏ –Ω–∏–∑–∞ –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)       
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 7) \
                                and str(b[0])[-1] != "1" or b[0] == (x + 3) and str(b[0])[-1] != "1" \
                                or b[0] == (x + 13) and str(b[0])[-1] != "1" else self._field[a]                                 # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)         
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x + 9) \
                                and str(b[0])[-1] != "0" or b[0] == (x - 1) and str(b[0])[-1] != "0" \
                                or b[0] == (x - 11) and str(b[0])[-1] != "0" else self._field[a]                                 # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ª–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                        break
                    elif move == "down" and x <= 80 and self.__arrange_ships_three(x, move):                                     # –≤—Ç–æ—Ä–æ–µ —É—Å–ª–æ–≤–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∫–æ—Ä–∞–±–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ)
                        for a, b in self._field.items():                                                                         # –≤ —Ü–∏–∫–ª–µ –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ, –∫–ª–µ—Ç–∫–∏ —Å –∫–æ—Ä–∞–±–ª—è–º–∏ –∏ –º–æ—Ä–µ–º –≤–æ–∫—Ä—É–≥ –∫–æ—Ä–∞–±–ª–µ–π –º–µ–Ω—è—é—Ç —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è
                            if b[0] == x:                                                        
                                self._field[a] = [x, self.__class__.ship_icon]                                 
                            if b[0] == x + 10:                       
                                self._field[a] = [x + 10, self.__class__.ship_icon]
                            if b[0] == x + 20:                       
                                self._field[a] = [x + 20, self.__class__.ship_icon]
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 10) or \
                                b[0] == (x + 30) else self._field[a]                                                             # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –≤–µ—Ä—Ö–∞ –∏ –Ω–∏–∑–∞ –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 9) \
                                and str(b[0])[-1] != "1" or b[0] == (x + 1) and str(b[0])[-1] != "1" or \
                                b[0] == (x + 11) and str(b[0])[-1] != "1" or \
                                b[0] == (x + 21) and str(b[0])[-1] != "1" or \
                                b[0] == (x + 31) and str(b[0])[-1] != "1" else self._field[a]                                    # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x + 29) \
                                and str(b[0])[-1] != "0" or b[0] == (x + 19) and str(b[0])[-1] != "0" or \
                                b[0] == (x + 9) and str(b[0])[-1] != "0" or \
                                b[0] == (x - 1) and str(b[0])[-1] != "0" or \
                                b[0] == (x - 11) and str(b[0])[-1] != "0" else self._field[a]                                    # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ª–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                        break                            
            if i == 2:                                                                                                           # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –¥–≤—É—Ö-–ø–∞–ª—É–±–Ω–æ–≥–æ
                while True:                                                                                                      # —Ü–∏–∫–ª –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –ø–æ–∫–∞ –Ω–µ –±—É–¥—É—Ç –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–∞–±–ª—è                
                    x = random.randint(1, 100)                                                                                   # —Ä–∞–Ω–¥–æ–º–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –≤ —Ü–∏–∫–ª–µ –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Ç–æ—á–∫–∞
                    move = random.choice(["right", "down"])                                                                      # –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–∞–±–ª—è –∏–∑ —Ç–æ—á–∫–∞ (–Ω–∞–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–Ω–∏–∑)                    
                    if move == "right" and 0 < int(str(x)[-1]) <= 9 and self.__arrange_ships_two(x, move):                       # –ø–µ—Ä–≤–æ–µ —É—Å–ª–æ–≤–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∫–æ—Ä–∞–±–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ)
                        for a, b in self._field.items():                                                                         # –≤ —Ü–∏–∫–ª–µ –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ, –∫–ª–µ—Ç–∫–∏ —Å –∫–æ—Ä–∞–±–ª—è–º–∏ –∏ –º–æ—Ä–µ–º –≤–æ–∫—Ä—É–≥ –∫–æ—Ä–∞–±–ª–µ–π –º–µ–Ω—è—é—Ç —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è
                            if b[0] == x:                                                        
                                self._field[a] = [x, self.__class__.ship_icon]                                 
                            if b[0] == x + 1:   
                                self._field[a] = [x + 1, self.__class__.ship_icon]                                                              
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 10) or \
                                b[0] == (x - 9) or \
                                b[0] == (x + 11) or \
                                b[0] == (x + 10) else self._field[a]                                                             # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –≤–µ—Ä—Ö–∞ –∏ –Ω–∏–∑–∞ –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)       
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 8) \
                                and str(b[0])[-1] != "1" or b[0] == (x + 2) and str(b[0])[-1] != "1" \
                                or b[0] == (x + 12) and str(b[0])[-1] != "1" else self._field[a]                                 # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)         
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x + 9) \
                                and str(b[0])[-1] != "0" or b[0] == (x - 1) and str(b[0])[-1] != "0" \
                                or b[0] == (x - 11) and str(b[0])[-1] != "0" else self._field[a]                                 # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ª–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                        break
                    elif move == "down" and x <= 90 and self.__arrange_ships_two(x, move):                                       # –≤—Ç–æ—Ä–æ–µ —É—Å–ª–æ–≤–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∫–æ—Ä–∞–±–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ)
                        for a, b in self._field.items():                                                                         # –≤ —Ü–∏–∫–ª–µ –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ, –∫–ª–µ—Ç–∫–∏ —Å –∫–æ—Ä–∞–±–ª—è–º–∏ –∏ –º–æ—Ä–µ–º –≤–æ–∫—Ä—É–≥ –∫–æ—Ä–∞–±–ª–µ–π –º–µ–Ω—è—é—Ç —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è
                            if b[0] == x:                                                        
                                self._field[a] = [x, self.__class__.ship_icon]                                 
                            if b[0] == x + 10:                       
                                self._field[a] = [x + 10, self.__class__.ship_icon]                    
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 10) or \
                                b[0] == (x + 20) else self._field[a]                                                             # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –≤–µ—Ä—Ö–∞ –∏ –Ω–∏–∑–∞ –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 9) \
                                and str(b[0])[-1] != "1" or b[0] == (x + 1) and str(b[0])[-1] != "1" or \
                                b[0] == (x + 11) and str(b[0])[-1] != "1" or \
                                b[0] == (x + 21) and str(b[0])[-1] != "1" else self._field[a]                                    # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x + 19) \
                                and str(b[0])[-1] != "0" or b[0] == (x + 9) and str(b[0])[-1] != "0" or \
                                b[0] == (x - 1) and str(b[0])[-1] != "0" or \
                                b[0] == (x - 11) and str(b[0])[-1] != "0" else self._field[a]                                    # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ª–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                        break
            if i == 1:                                                                                                           # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –æ–¥–Ω–æ-–ø–∞–ª—É–±–Ω–æ–≥–æ
                while True:                                                                                                      # —Ü–∏–∫–ª –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –ø–æ–∫–∞ –Ω–µ –±—É–¥—É—Ç –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–∞–±–ª—è                
                    x = random.randint(1, 100)                                                                                   # —Ä–∞–Ω–¥–æ–º–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –≤ —Ü–∏–∫–ª–µ –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Ç–æ—á–∫–∞
                    if self.__arrange_ships_one(x):                                                                              # —É—Å–ª–æ–≤–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∫–æ—Ä–∞–±–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
                        for a, b in self._field.items():                                                                         # –≤ —Ü–∏–∫–ª–µ –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ, –∫–ª–µ—Ç–∫–∏ —Å –∫–æ—Ä–∞–±–ª—è–º–∏ –∏ –º–æ—Ä–µ–º –≤–æ–∫—Ä—É–≥ –∫–æ—Ä–∞–±–ª–µ–π –º–µ–Ω—è—é—Ç —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è
                            if b[0] == x:                                                        
                                self._field[a] = [x, self.__class__.ship_icon]                                                              
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 10) or \
                                b[0] == (x + 10) else self._field[a]                                                             # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –≤–µ—Ä—Ö–∞ –∏ –Ω–∏–∑–∞ –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)       
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x - 9) \
                                and str(b[0])[-1] != "1" or b[0] == (x + 1) and str(b[0])[-1] != "1" \
                                or b[0] == (x + 11) and str(b[0])[-1] != "1" else self._field[a]                                 # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)         
                            self._field[a] = [b[0], self.__class__.sea_icon_block] if b[0] == (x + 9) \
                                and str(b[0])[-1] != "0" or b[0] == (x - 1) and str(b[0])[-1] != "0" \
                                or b[0] == (x - 11) and str(b[0])[-1] != "0" else self._field[a]                                 # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ª–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç –∫–æ—Ä–∞–±–ª—è (–ø–æ–º–µ—á–∞–µ–º –º–æ—Ä—Å–∫–∏–µ –∫–ª–µ—Ç–∫–∏, —Ä—è–¥–æ–º —Å –∫–æ—Ä–∞–±–ª—ë–º)
                        break    

    """–ú–ï–¢–û–î-addon, –ö–û–¢–û–†–´–ô –†–ï–ê–õ–ò–ó–£–ï–¢ SETTER –î–õ–Ø –ò–ì–†–û–í–û–ì–û –ü–û–õ–Ø –ö–û–¢–û–†–û–ï –ü–†–ï–î–ù–ê–ó–ù–ê–ß–ï–ù–û –î–õ–Ø –•–û–î–û–í (–ò–ù–ö–ê–ü–°–£–õ–ò–†–û–í–ê–ù–ù–´–ô)"""
    def __set_field_go_addon(self, value):                                                                                       # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∂–µ –≥–æ—Ç–æ–≤—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∏–¥ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π setter –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–∏ - —ç—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –∞ –∑–Ω–∞—á–µ–Ω–∏—è - —ç—Ç–æ —Å–ø–∏—Å–∫–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –∫–ª–µ—Ç–∫–∏ –∏ –∏–∫–æ–Ω–∫–æ–π –¥–ª—è –Ω–µ—ë
        coordinates = value[0]    
        icon = value[1]
        for a, b in self._field_go.items():
            if coordinates == a:
                self._field_go[a] = [b[0], icon]
        return self._field_go

    """–ú–ï–¢–û–î, –ö–û–¢–û–†–´–ô –†–ï–ê–õ–ò–ó–£–ï–¢ GETTER –ò SETTER –î–õ–Ø –ß–ê–°–¢–ò –ò–ì–†–û–í–û–ì–û –ü–û–õ–Ø –ö–û–¢–û–†–û–ï –ü–†–ï–î–ù–ê–ó–ù–ê–ß–ï–ù–û –î–õ–Ø –•–û–î–û–í"""
    def get_field_go(self):                                                                                                      # getter, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ä–∞–∑—É —á–∞—Å—Ç—å –ø–æ–ª—è –¥–ª—è —Ö–æ–¥–æ–≤ - —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á–∏ - —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –∞ –∑–Ω–∞—á–µ–Ω–∏—è –∫–ª—é—á–µ–π - —ç—Ç–æ —Å–ø–∏—Å–æ–∫ —Å –Ω–æ–º–µ—Ä–æ–º –∫–ª–µ—Ç–∫–∏ –∏ –µ—ë –∏–∫–æ–Ω–∫–æ–π
        return self._field_go        
    def set_field_go(self, value):                                                                                               # setter –º–µ–Ω—è–µ—Ç —á–∞—Å—Ç—å –ø–æ–ª—è, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—É—é –¥–ª—è —Ö–æ–¥–æ–≤. –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è value –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–æ—Ä—Ç–µ–∂–æ–º –∏–ª–∏ —Å–ª–æ–≤–∞—Ä—ë–º.
        self._field_go = self.__set_field_go_addon(value)                                                                        # —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –º–µ—Ç–æ–¥–æ–º "__set_field_go_addon"
    field_go = property(get_field_go, set_field_go) 

    """–ú–ï–¢–û–î-addon, –ö–û–¢–û–†–´–ô –†–ï–ê–õ–ò–ó–£–ï–¢ SETTER –î–õ–Ø –ò–ì–†–û–í–û–ì–û –ü–û–õ–Ø –ö–û–¢–û–†–û–ï –° –ö–û–†–ê–ë–õ–Ø–ú–ò (–ò–ù–ö–ê–ü–°–£–õ–ò–†–û–í–ê–ù–ù–´–ô)"""
    def __set_field_addon(self, value):                                                                                          # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∂–µ –≥–æ—Ç–æ–≤—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∏–¥ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π setter –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–∏ - —ç—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –∞ –∑–Ω–∞—á–µ–Ω–∏—è - —ç—Ç–æ —Å–ø–∏—Å–∫–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –∫–ª–µ—Ç–∫–∏ –∏ –∏–∫–æ–Ω–∫–æ–π –¥–ª—è –Ω–µ—ë
        coordinates = value[0]    
        icon = value[1]
        for a, b in self._field.items():
            if coordinates == a:
                self._field[a] = [b[0], icon]
        return self._field

    """–ú–ï–¢–û–î, –ö–û–¢–û–†–´–ô –†–ï–ê–õ–ò–ó–£–ï–¢ GETTER –ò SETTER –î–õ–Ø –ß–ê–°–¢–ò –ò–ì–†–û–í–û–ì–û –ü–û–õ–Ø –ö–û–¢–û–†–û–ï –°–û–î–ï–†–ñ–ò–¢ –ö–û–†–ê–ë–õ–ò"""
    def get_field(self):                                                                                                         # getter, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ä–∞–∑—É —á–∞—Å—Ç—å –ø–æ–ª—è –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π - —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á–∏ - —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –∞ –∑–Ω–∞—á–µ–Ω–∏—è –∫–ª—é—á–µ–π - —ç—Ç–æ —Å–ø–∏—Å–æ–∫ —Å –Ω–æ–º–µ—Ä–æ–º –∫–ª–µ—Ç–∫–∏ –∏ –µ—ë –∏–∫–æ–Ω–∫–æ–π
        return self._field        
    def set_field(self, value):                                                                                                  # setter –º–µ–Ω—è–µ—Ç —á–∞—Å—Ç—å –ø–æ–ª—è, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—É—é –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π. –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è value –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–æ—Ä—Ç–µ–∂–æ–º –∏–ª–∏ —Å–ø–∏—Å–∫–æ–º.
        self._field = self.__set_field_addon(value)                                                                              # —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –º–µ—Ç–æ–¥–æ–º "__set_field_addon"
    field_ship = property(get_field, set_field) 

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –û–ü–†–ï–î–ï–õ–Ø–ï–¢ –°–õ–ï–î–£–Æ–©–ò–ô –í–´–°–¢–†–ï–õ –î–õ–Ø –ö–û–ú–ü–¨–Æ–¢–ï–†–ê, –ï–°–õ–ò –ö–û–†–ê–ë–õ–¨ –†–ê–ù–ï–ù –ò –ò–ú–ï–ï–¢ –í–ï–†–¢–ò–ö–ê–õ–¨–ù–£–Æ –û–†–ò–ï–ù–¢–ê–¶–ò–Æ."""
def vertical_shot(temp_dict, shot_cpu):
    ### -1
    if (str(int(shot_cpu[0:-1]) - 1) + shot_cpu[-1]) in temp_dict \
        and temp_dict[(str(int(shot_cpu[0:-1]) - 1) + shot_cpu[-1])][-1] != Sea_battle.hit_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) - 1) + shot_cpu[-1])][-1] != Sea_battle.miss_icon:                                                                                          
        return (str(int(shot_cpu[0:-1]) - 1) + shot_cpu[-1])                                                                                                                                                    # 1 —Å—Ç—Ä–æ–∫–∞ –Ω–∞–≤–µ—Ä—Ö
    ### +1
    elif (str(int(shot_cpu[0:-1]) + 1) + shot_cpu[-1]) in temp_dict \
        and temp_dict[(str(int(shot_cpu[0:-1]) + 1) + shot_cpu[-1])][-1] != Sea_battle.hit_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) + 1) + shot_cpu[-1])][-1] != Sea_battle.miss_icon:                                                                                          
        return (str(int(shot_cpu[0:-1]) + 1) + shot_cpu[-1])                                                                                                                                                    # 1 —Å—Ç—Ä–æ–∫–∞ –≤–Ω–∏–∑
    ### -2
    elif (str(int(shot_cpu[0:-1]) - 2) + shot_cpu[-1]) in temp_dict \
        and temp_dict[(str(int(shot_cpu[0:-1]) - 2) + shot_cpu[-1])][-1] != Sea_battle.hit_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) - 2) + shot_cpu[-1])][-1] != Sea_battle.miss_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) - 1) + shot_cpu[-1])][-1] != Sea_battle.miss_icon:
        return (str(int(shot_cpu[0:-1]) - 2) + shot_cpu[-1])                                                                                                                                                    # 2 —Å—Ç—Ä–æ–∫–∏ –Ω–∞–≤–µ—Ä—Ö
    ### +2
    elif (str(int(shot_cpu[0:-1]) + 2) + shot_cpu[-1]) in temp_dict \
        and temp_dict[(str(int(shot_cpu[0:-1]) + 2) + shot_cpu[-1])][-1] != Sea_battle.hit_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) + 2) + shot_cpu[-1])][-1] != Sea_battle.miss_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) + 1) + shot_cpu[-1])][-1] != Sea_battle.miss_icon:                                                                                          
        return (str(int(shot_cpu[0:-1]) + 2) + shot_cpu[-1])                                                                                                                                                    # 2 —Å—Ç—Ä–æ–∫–∏ –≤–Ω–∏–∑
    ### -3
    elif (str(int(shot_cpu[0:-1]) - 3) + shot_cpu[-1]) in temp_dict \
        and temp_dict[(str(int(shot_cpu[0:-1]) - 3) + shot_cpu[-1])][-1] != Sea_battle.hit_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) - 3) + shot_cpu[-1])][-1] != Sea_battle.miss_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) - 2) + shot_cpu[-1])][-1] != Sea_battle.miss_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) - 1) + shot_cpu[-1])][-1] != Sea_battle.miss_icon:
        return (str(int(shot_cpu[0:-1]) - 3) + shot_cpu[-1])                                                                                                                                                    # 3 —Å—Ç—Ä–æ–∫–∏ –Ω–∞–≤–µ—Ä—Ö
    ### +3
    elif (str(int(shot_cpu[0:-1]) + 3) + shot_cpu[-1]) in temp_dict \
        and temp_dict[(str(int(shot_cpu[0:-1]) + 3) + shot_cpu[-1])][-1] != Sea_battle.hit_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) + 3) + shot_cpu[-1])][-1] != Sea_battle.miss_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) + 2) + shot_cpu[-1])][-1] != Sea_battle.miss_icon \
        and temp_dict[(str(int(shot_cpu[0:-1]) + 1) + shot_cpu[-1])][-1] != Sea_battle.miss_icon:
        return (str(int(shot_cpu[0:-1]) + 3) + shot_cpu[-1])                                                                                                                                                    # 3 —Å—Ç—Ä–æ–∫–∏ –≤–Ω–∏–∑
    else:
        return "–æ—à–∏–±–∫–∞"

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –û–ü–†–ï–î–ï–õ–Ø–ï–¢ –°–õ–ï–î–£–Æ–©–ò–ô –í–´–°–¢–†–ï–õ –î–õ–Ø –ö–û–ú–ü–¨–Æ–¢–ï–†–ê, –ï–°–õ–ò –ö–û–†–ê–ë–õ–¨ –†–ê–ù–ï–ù –ò –ò–ú–ï–ï–¢ –ì–û–†–ò–ó–û–ù–¢–ê–õ–¨–ù–£ –û–†–ò–ï–ù–¢–ê–¶–ò–Æ."""
def horizontal_shot(temp_dict, shot_cpu):
#    ### -1"–ö" 
    if shot_cpu[-1] == "–ö" and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 2))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 2))][-1] != Sea_battle.miss_icon:        
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 2))                                                                     # -1 —Å–∏–º–≤–æ–ª, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ "–ö"
#    ### -1 –Ω–µ "–ö"  
    elif shot_cpu[-1] != "–ö" and (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 1)) in temp_dict \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 1))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 1))][-1] != Sea_battle.miss_icon:                                                                                          
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 1))                                                                     # -1 —Å–∏–º–≤–æ–ª, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ –Ω–µ "–ö"        
#    ### +1"–ò"
    elif shot_cpu[-1] == "–ò" and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 2))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 2))][-1] != Sea_battle.miss_icon:                                                                                          
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 2))                                                                     # +1 —Å–∏–º–≤–æ–ª, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ "–ò"    
    ### +1 –Ω–µ "–ò"
    elif shot_cpu[-1] != "–ò" and (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 1)) in temp_dict \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 1))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 1))][-1] != Sea_battle.miss_icon:                                                                                          
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 1))                                                                     # +1 —Å–∏–º–≤–æ–ª, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ –Ω–µ "–ò"
#    ### -2 "–ö"
    elif shot_cpu[-1] == "–ö" and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 3))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 3))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 2))][-1] != Sea_battle.miss_icon:        
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 3))                                                                     # -2 —Å–∏–º–≤–æ–ª–∞, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ "–ö"
#    ### -2 –Ω–µ "–ö"
    elif shot_cpu[-1] != "–ö" and (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 2)) in temp_dict \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 1))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 2))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 2))][-1] != Sea_battle.miss_icon:                                                                                          
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 2))                                                                     # -2 —Å–∏–º–≤–æ–ª–∞, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ –Ω–µ "–ö"
#    ### +2 "–ó"
    elif shot_cpu[-1] == "–ó" and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 3))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 3))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 1))][-1] != Sea_battle.miss_icon:                                                                                          
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 3))                                                                     # +2 —Å–∏–º–≤–æ–ª–∞, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ "–ó"
#    ### +2 –Ω–µ "–ó"
    elif shot_cpu[-1] != "–ó" and (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 2)) in temp_dict \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 2))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 2))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 1))][-1] != Sea_battle.miss_icon:                                                                                          
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 2))                                                                     # +2 —Å–∏–º–≤–æ–ª–∞, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ –Ω–µ "–ó"
#    ### -3 "–ö"
    elif shot_cpu[-1] == "–ö" and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 4))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 4))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 3))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 2))][-1] != Sea_battle.miss_icon:        
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 4))                                                                     # -3 —Å–∏–º–≤–æ–ª–∞, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ "–ö"
#    ### -3 –Ω–µ "–ö"
    elif shot_cpu[-1] != "–ö" and (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 3)) in temp_dict \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 3))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 3))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 2))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 1))][-1] != Sea_battle.miss_icon:                                                                                          
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) - 3))                                                                     # -3 —Å–∏–º–≤–æ–ª–∞, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ –Ω–µ "–ö"
#    ### +3 "–ñ"
    elif shot_cpu[-1] == "–ñ" and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 4))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 4))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 3))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 2))][-1] != Sea_battle.miss_icon:                                                                                          
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 4))                                                                     # +3 —Å–∏–º–≤–æ–ª–∞, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ "–ñ"
#    ### +3 –Ω–µ "–ñ"
    elif shot_cpu[-1] != "–ñ" and (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 3)) in temp_dict \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 3))][-1] != Sea_battle.hit_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 3))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 2))][-1] != Sea_battle.miss_icon \
        and temp_dict[(shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 1))][-1] != Sea_battle.miss_icon:                                                                                          
        return (shot_cpu[0:-1] + chr(ord(shot_cpu[-1]) + 3))                                                                     # +3 —Å–∏–º–≤–æ–ª–∞, –µ—Å–ª–∏ –±—É–∫–≤–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞ –Ω–µ "–ñ"    
    else:
        return "–æ—à–∏–±–∫–∞"

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –ü–†–û–°–¢–û –û–ü–†–ï–î–ï–õ–Ø–ï–¢ –í–°–ï–• –°–û–°–ï–î–ï–ô –¢–û–ß–ö–ò –ü–û –í–ï–†–¢–ò–ö–ê–õ–ò –ò –ì–û–†–ò–ó–û–ù–¢–ê–õ–ò.
–í–û–ó–í–†–ê–©–ê–ï–¢ –°–ü–ò–°–û–ö –ö–û–û–†–î–ò–ù–ê–¢."""
def vertical_and_horizontal_neighborhood_check_3(point):                                                                                               
    if point == "1–ê":
        temp = ["1–ë", "2–ê"]                             
    elif len(point) == 2 and point[0] == "1" and point != "1–ò" and point != "1–ö":
        left = point[0] + chr(ord(point[1]) - 1)
        right = point[0] + chr(ord(point[1]) + 1)
        down = str(int(point[0]) + 1) + point[1]
        temp = [left, right, down]
    elif point == "1–ò":
        left = point[0] + chr(ord(point[1]) - 1)
        right = point[0] + chr(ord(point[1]) + 2)
        down = str(int(point[0]) + 1) + point[1]
        temp = [left, right, down]
    elif point == "1–ö":
        temp = ["1–ò", "2–ö"]
    elif point[-1] == "–ö" and point != "10–ö":
        up = str(int(point[0]) - 1) + point[1]
        down = str(int(point[0]) + 1) + point[1]
        left = point[0] + chr(ord(point[1]) - 2)
        temp = [up, down, left]
    elif point == "10–ö":
        temp = ["10–ò", "9–ö"]
    elif point == "10–ò":
        up = str(int(point[0:-1]) - 1) + point[-1]
        right = point[0:-1] + chr(ord(point[-1]) + 2)
        left = point[0:-1] + chr(ord(point[-1]) - 1)                
        temp = [up, right, left]
    elif len(point) == 3 and point != "10–ê":
        up = str(int(point[0:-1]) - 1) + point[-1]
        right = point[0:-1] + chr(ord(point[-1]) + 1)
        left = point[0:-1] + chr(ord(point[-1]) - 1)  
        temp = [up, right, left]
    elif point == "10–ê":
        temp = ["9–ê", "10–ë"]
    elif point[-1] == "–ê":
        up = str(int(point[0]) - 1) + point[1]
        left = point[0] + chr(ord(point[1]) + 1)
        down = str(int(point[0]) + 1) + point[1]
        temp = [up, left, down]
    elif point[-1] == "–ò":
        up = str(int(point[0]) - 1) + point[1]
        right = point[0] + chr(ord(point[1]) + 2)
        down = str(int(point[0]) + 1) + point[1]
        left = point[0] + chr(ord(point[1]) - 1)
        temp = [up, right, down, left]
    else:
        up = str(int(point[0]) - 1) + point[1]
        right = point[0] + chr(ord(point[1]) + 1)
        down = str(int(point[0]) + 1) + point[1]
        left = point[0] + chr(ord(point[1]) - 1)
        temp = [up, right, down, left]
    return temp

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –ü–†–û–í–ï–†–Ø–ï–¢ –ï–°–¢–¨ –õ–ò –°–û–°–ï–î–°–¢–í–û –ü–û –í–ï–†–¢–ò–ö–ê–õ–ò –ò –ì–û–†–ò–ó–û–ù–¢–ê–õ–ò '‚öì' —Å '‚ùå', –¢–û–õ–¨–ö–û –î–õ–Ø –¢–ï–• –ö–õ–ï–¢–û–ö, –ö–û–¢–û–†–´–ï –°–ê–ú–ò —Å '‚ùå'."""
def vertical_and_horizontal_neighborhood_check_2(point, field):                                                                 
    if point == "1–ê" and field[point][-1] == Sea_battle.hit_icon:
        temp = ["1–ë", "2–ê"]                      
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif len(point) == 2 and point[0] == "1" and point != "1–ò" and point != "1–ö" and field[point][-1] == Sea_battle.hit_icon:
        left = point[0] + chr(ord(point[1]) - 1)
        right = point[0] + chr(ord(point[1]) + 1)
        down = str(int(point[0]) + 1) + point[1]
        temp = [left, right, down]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif point == "1–ò" and field[point][-1] == Sea_battle.hit_icon:
        left = point[0] + chr(ord(point[1]) - 1)
        right = point[0] + chr(ord(point[1]) + 2)
        down = str(int(point[0]) + 1) + point[1]
        temp = [left, right, down]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif point == "1–ö" and field[point][-1] == Sea_battle.hit_icon:
        temp = ["1–ò", "2–ö"]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif point[-1] == "–ö" and point != "10–ö" and field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0]) - 1) + point[1]
        down = str(int(point[0]) + 1) + point[1]
        left = point[0] + chr(ord(point[1]) - 2)
        temp = [up, down, left]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif point == "10–ö" and field[point][-1] == Sea_battle.hit_icon:
        temp = ["10–ò", "9–ö"]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif point == "10–ò" and field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0:-1]) - 1) + point[-1]
        right = point[0:-1] + chr(ord(point[-1]) + 2)
        left = point[0:-1] + chr(ord(point[-1]) - 1)                
        temp = [up, right, left]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif len(point) == 3 and point != "10–ê" and field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0:-1]) - 1) + point[-1]
        right = point[0:-1] + chr(ord(point[-1]) + 1)
        left = point[0:-1] + chr(ord(point[-1]) - 1)  
        temp = [up, right, left]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif point == "10–ê" and field[point][-1] == Sea_battle.hit_icon:
        temp = ["9–ê", "10–ë"]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif point[-1] == "–ê" and field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0]) - 1) + point[1]
        left = point[0] + chr(ord(point[1]) + 1)
        down = str(int(point[0]) + 1) + point[1]
        temp = [up, left, down]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif point[-1] == "–ò" and field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0]) - 1) + point[1]
        right = point[0] + chr(ord(point[1]) + 2)
        down = str(int(point[0]) + 1) + point[1]
        left = point[0] + chr(ord(point[1]) - 1)
        temp = [up, right, down, left]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    elif field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0]) - 1) + point[1]
        right = point[0] + chr(ord(point[1]) + 1)
        down = str(int(point[0]) + 1) + point[1]
        left = point[0] + chr(ord(point[1]) - 1)
        temp = [up, right, down, left]
        result = set()
        for a in temp:
            if field[a][1] == Sea_battle.ship_icon:
                result.add("—Ä–∞–Ω–µ–Ω")
            else:
                result.add("–Ω–µ —Ä–∞–Ω–µ–Ω")
    else:
        result = set()
    return result

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –ì–ï–ù–ï–†–ò–†–£–ï–¢ –í–´–°–¢–†–ï–õ –î–õ–Ø CPU."""
def function_input_coordinates_for_cpu(temp_dict):
    go = []
    for a, b in temp_dict.items():
        if b[1] != Sea_battle.hit_icon and b[1] != Sea_battle.miss_icon:
            go.append(a)
    return random.choice(go)

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –ò–ó–ú–ï–ù–Ø–ï–¢ –°–û–°–ï–î–ï–ô –í–û–ö–†–£–ì –° –ö–õ–ï–¢–ö–û–ô "üü™"."""
def changing_neighbors_around(point, field):                                                                                                         
        if point == "1–ê":
            temp = ["1–ë", "2–ë", "2–ê"]                
        elif len(point) == 2 and point[0] == "1" and point != "1–ò" and point != "1–ö" and field[point][-1] == Sea_battle.hit_icon:
            left = point[0] + chr(ord(point[1]) - 1)
            right = point[0] + chr(ord(point[1]) + 1)
            down = str(int(point[0]) + 1) + point[1]
            down_left = str(int(point[0]) + 1) + chr(ord(point[1]) - 1)
            down_right = str(int(point[0]) + 1) + chr(ord(point[1]) + 1)
            temp = [left, right, down, down_left, down_right]
        elif point == "1–ò" and field[point][-1] == Sea_battle.hit_icon:
            left = point[0] + chr(ord(point[1]) - 1)
            right = point[0] + chr(ord(point[1]) + 2)
            down = str(int(point[0]) + 1) + point[1]
            down_left = str(int(point[0]) + 1) + chr(ord(point[1]) - 1)
            down_right = str(int(point[0]) + 1) + chr(ord(point[1]) + 2)
            temp = [left, right, down, down_left, down_right]             
        elif point == "1–ö" and field[point][-1] == Sea_battle.hit_icon:
            temp = ["1–ò", "2–ò", "2–ö"]
        elif point[-1] == "–ö" and point != "10–ö" and field[point][-1] == Sea_battle.hit_icon:
            up = str(int(point[0]) - 1) + point[1]
            down = str(int(point[0]) + 1) + point[1]
            left = point[0] + chr(ord(point[1]) - 2)
            up_left = str(int(point[0]) - 1) + chr(ord(point[1]) - 2)
            down_left = str(int(point[0]) + 1) + chr(ord(point[1]) - 2) 
            temp = [up, down, left, up_left, down_left]
        elif point == "10–ö" and field[point][-1] == Sea_battle.hit_icon:
            temp = ["9–ò", "10–ò", "9–ö"]            
        elif point == "10–ò" and field[point][-1] == Sea_battle.hit_icon:
            up = str(int(point[0:-1]) - 1) + point[-1]
            right = point[0:-1] + chr(ord(point[-1]) + 2)
            left = point[0:-1] + chr(ord(point[-1]) - 1)                
            up_left = str(int(point[0:-1]) - 1) + chr(ord(point[-1]) - 1)
            up_right = str(int(point[0:-1]) - 1) + chr(ord(point[-1]) + 2)
            temp = [up, right, left, up_left, up_right]
        elif len(point) == 3 and point != "10–ê" and field[point][-1] == Sea_battle.hit_icon:
            up = str(int(point[0:-1]) - 1) + point[-1]
            right = point[0:-1] + chr(ord(point[-1]) + 1)
            left = point[0:-1] + chr(ord(point[-1]) - 1)  
            up_left = str(int(point[0:-1]) - 1) + chr(ord(point[-1]) - 1)
            up_right = str(int(point[0:-1]) - 1) + chr(ord(point[-1]) + 1)
            temp = [up, right, left, up_left, up_right]
        elif point == "10–ê" and field[point][-1] == Sea_battle.hit_icon:
            temp = ["9–ê", "9–ë", "10–ë"]            
        elif point[-1] == "–ê" and field[point][-1] == Sea_battle.hit_icon:
            up = str(int(point[0]) - 1) + point[1]
            left = point[0] + chr(ord(point[1]) + 1)
            down = str(int(point[0]) + 1) + point[1]
            up_left = str(int(point[0]) - 1) + chr(ord(point[1]) + 1)
            down_left = str(int(point[0]) + 1) + chr(ord(point[1]) + 1)
            temp = [up, left, down, up_left, down_left]            
        elif point[-1] == "–ò" and field[point][-1] == Sea_battle.hit_icon:
            up = str(int(point[0]) - 1) + point[1]
            right = point[0] + chr(ord(point[1]) + 2)
            down = str(int(point[0]) + 1) + point[1]
            left = point[0] + chr(ord(point[1]) - 1)
            up_left = str(int(point[0]) - 1) + chr(ord(point[1]) - 1)
            up_right = str(int(point[0]) - 1) + chr(ord(point[1]) + 2)
            down_left = str(int(point[0]) + 1) + chr(ord(point[1]) - 1)
            down_right = str(int(point[0]) + 1) + chr(ord(point[1]) + 2)
            temp = [up, right, down, left, up_left, up_right, down_left, down_right]
        elif field[point][-1] == Sea_battle.hit_icon:
            up = str(int(point[0]) - 1) + point[1]
            right = point[0] + chr(ord(point[1]) + 1)
            down = str(int(point[0]) + 1) + point[1]
            left = point[0] + chr(ord(point[1]) - 1)
            up_left = str(int(point[0]) - 1) + chr(ord(point[1]) - 1)
            up_right = str(int(point[0]) - 1) + chr(ord(point[1]) + 1)
            down_left = str(int(point[0]) + 1) + chr(ord(point[1]) - 1)
            down_right = str(int(point[0]) + 1) + chr(ord(point[1]) + 1)
            temp = [up, right, down, left, up_left, up_right, down_left, down_right]
        for i in temp:
            if field[i][1] == Sea_battle.sea_icon_block:
                field[i][1] = Sea_battle.miss_icon
        return field

"""addon ‚Ññ1 –ü–†–û–ò–ó–í–û–î–ò–¢ –û–¢–ë–û–† –°–û–°–ï–î–ï–ô –¢–û–õ–¨–ö–û –° '‚ùå' –ò –û–ü–†–ï–î–ï–õ–Ø–ï–¢ –ü–û–¢–û–ü–õ–ï–ù –ö–û–†–ê–ë–õ–¨ –ò–õ–ò –ù–ï–¢ (–ù–ê–õ–ò–ß–ò–ï '‚öì')."""
def determining_vertical_and_horizontal_neighbors_addon(temp, field):
    result = [[]]
    for a in temp:
        if field[a][1] == Sea_battle.hit_icon:
            result[0].append(a)
        if field[a][1] == Sea_battle.ship_icon:
            result.append("alive")                                                                                               # –≤ —Å–ø–∏—Å–∫–µ "result" –ø–æ—è–≤–ª—è–µ—Ç—Å—è –º–µ—Ç–∫–∞ "alive" (–∫–æ—Ä–∞–±–ª—å –∂–∏–≤)
    return result

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –í–û–ó–í–†–ê–©–ê–ï–¢ –°–û–°–ï–î–ï–ô –ü–û –í–ï–†–¢–ò–ö–ê–õ–ò –ò –ì–û–†–ò–ó–û–ù–¢–ê–õ–ò —Å '‚ùå', –¢–û–õ–¨–ö–û –î–õ–Ø –¢–ï–• –ö–õ–ï–¢–û–ö, –ö–û–¢–û–†–´–ï –°–ê–ú–ò —Å '‚ùå'.
–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ö–õ–ï–¢–û–ö –ù–ê–ü–ò–°–ê–ù–ê –í <addon ‚Ññ1>. –ú–û–î–ò–§–ò–ö–ê–¶–ò–Ø –ö–õ–ï–¢–û–ö –ù–ê–ü–ò–°–ê–ù–ê –í <addon ‚Ññ2>."""
def determining_vertical_and_horizontal_neighbors(point, field, for_basic_case):                                                 # –§–£–ù–ö–¶–ò–Ø –ë–£–î–ï–¢ –í–´–ó–´–í–ê–¢–¨–°–Ø –†–ï–ö–£–†–°–ò–í–ù–û, –ê –í –†–ï–ö–£–†–°–ò–ò –ë–£–î–£–¢ –í–´–ó–´–í–ê–¢–¨–°–Ø –ù–ï –†–ï–ö–£–†–°–ò–ù–û –î–†–£–ì–ò–ï –î–í–ï –§–£–ù–ö–¶–ò–ò
        if point in for_basic_case:                                                                                              # –±–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π                     
            pass
        else:
            for_basic_case.append(point)                                                                                         # –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ —Å–ª—É—á–∞—è, –¥–∞–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å—Å—è (—É—Å–ª–æ–≤–∏–µ –≤ –±–∞–∑–æ–≤–æ–º —Å–ª—É—á–∞–µ)                                                                                                                    
            if point == "1–ê" and field[point][-1] == Sea_battle.hit_icon:
                temp = ["1–ë", "2–ê"]                
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field) 
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)                    
            elif len(point) == 2 and point[0] == "1" and point != "1–ò" and point != "1–ö" and field[point][-1] == Sea_battle.hit_icon:
                left = point[0] + chr(ord(point[1]) - 1)
                right = point[0] + chr(ord(point[1]) + 1)
                down = str(int(point[0]) + 1) + point[1]
                temp = [left, right, down]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field)             
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)        
            elif point == "1–ò" and field[point][-1] == Sea_battle.hit_icon:
                left = point[0] + chr(ord(point[1]) - 1)
                right = point[0] + chr(ord(point[1]) + 2)
                down = str(int(point[0]) + 1) + point[1]
                temp = [left, right, down]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field)             
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)                
            elif point == "1–ö" and field[point][-1] == Sea_battle.hit_icon:
                temp = ["1–ò", "2–ö"]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field) 
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)              
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)                    
            elif point[-1] == "–ö" and point != "10–ö" and field[point][-1] == Sea_battle.hit_icon:
                up = str(int(point[0]) - 1) + point[1]
                down = str(int(point[0]) + 1) + point[1]
                left = point[0] + chr(ord(point[1]) - 2)
                temp = [up, down, left]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field)             
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)
            elif point == "10–ö" and field[point][-1] == Sea_battle.hit_icon:
                temp = ["10–ò", "9–ö"]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field) 
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)        
            elif point == "10–ò" and field[point][-1] == Sea_battle.hit_icon:
                up = str(int(point[0:-1]) - 1) + point[-1]
                right = point[0:-1] + chr(ord(point[-1]) + 2)
                left = point[0:-1] + chr(ord(point[-1]) - 1)                
                temp = [up, right, left]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field)             
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)        
            elif len(point) == 3 and point != "10–ê" and field[point][-1] == Sea_battle.hit_icon:
                up = str(int(point[0:-1]) - 1) + point[-1]
                right = point[0:-1] + chr(ord(point[-1]) + 1)
                left = point[0:-1] + chr(ord(point[-1]) - 1)  
                temp = [up, right, left]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field)             
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)        
            elif point == "10–ê" and field[point][-1] == Sea_battle.hit_icon:
                temp = ["9–ê", "10–ë"]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field) 
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)                
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)
            elif point[-1] == "–ê" and field[point][-1] == Sea_battle.hit_icon:
                up = str(int(point[0]) - 1) + point[1]
                left = point[0] + chr(ord(point[1]) + 1)
                down = str(int(point[0]) + 1) + point[1]
                temp = [up, left, down]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field)             
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)
            elif point[-1] == "–ò" and field[point][-1] == Sea_battle.hit_icon:
                up = str(int(point[0]) - 1) + point[1]
                right = point[0] + chr(ord(point[1]) + 2)
                down = str(int(point[0]) + 1) + point[1]
                left = point[0] + chr(ord(point[1]) - 1)
                temp = [up, right, down, left]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field)             
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)
            elif field[point][-1] == Sea_battle.hit_icon:
                up = str(int(point[0]) - 1) + point[1]
                right = point[0] + chr(ord(point[1]) + 1)
                down = str(int(point[0]) + 1) + point[1]
                left = point[0] + chr(ord(point[1]) - 1)
                temp = [up, right, down, left]
                result = determining_vertical_and_horizontal_neighbors_addon(temp, field)             
                for i in result[0]:
                    determining_vertical_and_horizontal_neighbors(i, field, for_basic_case)
                if len(result) == 1:
                    field = changing_neighbors_around(point, field)
            return field
        
"""addon –û–ü–†–ï–î–ï–õ–Ø–ï–¢ –°–û–°–ï–î–°–¢–í–û –ö–õ–ï–¢–ö–ò –° '‚ùå' –ò –ö–õ–ï–¢–û–ö –° '‚öì'."""
def vertical_and_horizontal_neighborhood_check_addon(temp, field):    
    result = []
    for a in temp:
        if field[a][1] == Sea_battle.ship_icon:
            result.append(True)
    return True if True in result else False

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –ü–†–û–í–ï–†–Ø–ï–¢ –ï–°–¢–¨ –õ–ò –°–û–°–ï–î–°–¢–í–û –ü–û –í–ï–†–¢–ò–ö–ê–õ–ò –ò –ì–û–†–ò–ó–û–ù–¢–ê–õ–ò '‚öì' —Å '‚ùå', –¢–û–õ–¨–ö–û –î–õ–Ø –¢–ï–• –ö–õ–ï–¢–û–ö, –ö–û–¢–û–†–´–ï –°–ê–ú–ò —Å '‚ùå'.
–§–£–ù–ö–¶–ò–Ø –í–û–ó–í–†–ê–©–ê–ï–¢ –°–ü–ò–°–û–ö, –ö–û–¢–û–†–´–ô –ú–û–ñ–ï–¢ –°–û–î–ï–†–ñ–ê–¢–¨ TRUE, –ê –ú–û–ñ–ï–¢ –ù–ï –°–û–î–ï–†–ñ–ê–¢–¨."""
def vertical_and_horizontal_neighborhood_check(point, field, temp_list):                                                         # –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–æ—Å–µ–¥–Ω–∏–µ –∫–ª–µ—Ç–∫–∏ –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –≤ —Ñ—É–Ω–∫—Ü–∏—é-addon –∏—Ö —Å–ø–∏—Å–æ–∫. Addon –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –∏–ª–∏ False (–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ —Å–æ—Å–µ–¥—Å—Ç–≤–æ —Å '‚öì').
    if point == "1–ê" and field[point][-1] == Sea_battle.hit_icon:
        temp = ["1–ë", "2–ê"]                             
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif len(point) == 2 and point[0] == "1" and point != "1–ò" and point != "1–ö" and field[point][-1] == Sea_battle.hit_icon:
        left = point[0] + chr(ord(point[1]) - 1)
        right = point[0] + chr(ord(point[1]) + 1)
        down = str(int(point[0]) + 1) + point[1]
        temp = [left, right, down]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif point == "1–ò" and field[point][-1] == Sea_battle.hit_icon:
        left = point[0] + chr(ord(point[1]) - 1)
        right = point[0] + chr(ord(point[1]) + 2)
        down = str(int(point[0]) + 1) + point[1]
        temp = [left, right, down]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif point == "1–ö" and field[point][-1] == Sea_battle.hit_icon:
        temp = ["1–ò", "2–ö"]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif point[-1] == "–ö" and point != "10–ö" and field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0]) - 1) + point[1]
        down = str(int(point[0]) + 1) + point[1]
        left = point[0] + chr(ord(point[1]) - 2)
        temp = [up, down, left]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif point == "10–ö" and field[point][-1] == Sea_battle.hit_icon:
        temp = ["10–ò", "9–ö"]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif point == "10–ò" and field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0:-1]) - 1) + point[-1]
        right = point[0:-1] + chr(ord(point[-1]) + 2)
        left = point[0:-1] + chr(ord(point[-1]) - 1)                
        temp = [up, right, left]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif len(point) == 3 and point != "10–ê" and field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0:-1]) - 1) + point[-1]
        right = point[0:-1] + chr(ord(point[-1]) + 1)
        left = point[0:-1] + chr(ord(point[-1]) - 1)  
        temp = [up, right, left]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif point == "10–ê" and field[point][-1] == Sea_battle.hit_icon:
        temp = ["9–ê", "10–ë"]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif point[-1] == "–ê" and field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0]) - 1) + point[1]
        left = point[0] + chr(ord(point[1]) + 1)
        down = str(int(point[0]) + 1) + point[1]
        temp = [up, left, down]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif point[-1] == "–ò" and field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0]) - 1) + point[1]
        right = point[0] + chr(ord(point[1]) + 2)
        down = str(int(point[0]) + 1) + point[1]
        left = point[0] + chr(ord(point[1]) - 1)
        temp = [up, right, down, left]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    elif field[point][-1] == Sea_battle.hit_icon:
        up = str(int(point[0]) - 1) + point[1]
        right = point[0] + chr(ord(point[1]) + 1)
        down = str(int(point[0]) + 1) + point[1]
        left = point[0] + chr(ord(point[1]) - 1)
        temp = [up, right, down, left]
        result = vertical_and_horizontal_neighborhood_check_addon(temp, field)
        if result == True:
            temp_list.append(result)
    return temp_list

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –í–û–ó–í–†–ê–©–ê–ï–¢ –û–ë–ù–û–í–õ–Å–ù–ù–´–ô –û–ë–™–ï–ö–¢ –í–†–ê–ì–ê –° –ü–û–õ–ï–ú –î–õ–Ø –ö–û–†–ê–ë–õ–ï–ô –ü–û–°–õ–ï –•–û–î–ê –¢–ï–ö–£–©–ï–ì–û –ò–ì–†–û–ö–ê"""
def fuction_mod_object_of_enemy_ship_field_for_go_current_user(object, shot_player, package):
    object.field_ship = (shot_player, package)
    return object

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –í–û–ó–í–†–ê–©–ê–ï–¢ –û–ë–ù–û–í–õ–Å–ù–ù–´–ô –û–ë–™–ï–ö–¢ –° –ü–û–õ–ï–ú –î–õ–Ø –¢–ï–ö–£–©–ï–ì–û –ò–ì–†–û–ö–ê (—á–∞—Å—Ç–∏ –¥–ª—è —Ö–æ–¥–æ–≤) –ò –ó–ê–ú–ï–ù–Ø–ï–¢ –û–ë–™–ï–ö–¢ –ù–û–í–´–ú –ó–ù–ê–ß–ï–ù–ò–ï–ú"""
def fuction_mod_object_for_current_user_go(object, shot_player, package):
    object.field_go = (shot_player, package)
    return object

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –ü–†–û–í–ï–†–Ø–ï–¢ –°–¢–ê–¢–£–° –ö–õ–ï–¢–ö–ò –ò–ì–†–û–í–û–ì–û –ü–û–õ–Ø –° –ö–û–†–ê–ë–õ–Ø–ú–ò –ü–†–û–¢–ò–í–ù–ò–ö–ê"""
def function_check_cell(obj, shot):                                                                                              # –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∞—Ç—Ä–∏–±—É—Ç –æ–±—ä–µ–∫—Ç (—Å–ª–æ–≤–∞—Ä—å —Å —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∫–æ—Ä–∞–±–ª–µ–π) –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—ã—Å—Ç—Ä–µ–ª–∞ –∏–≥—Ä–æ–∫–∞
    for a, b in obj.items():
        if a == shot:
            return b[1]

"""–§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–ê–Ø –†–ï–ê–õ–ò–ó–£–ï–¢ –ü–†–û–¶–ï–°–° –í–í–û–î–ê –ö–û–û–†–î–ò–ù–ê–¢ –í–´–°–¢–†–ï–õ–ê –û–¢ –ò–ì–†–û–ö–ê"""
def function_input_coordinates():
    temp = []                                                                                                                    # –≤ —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –±—É–¥–µ–º –∫–ª–∞—Å—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    for a in Sea_battle.numbers:
        for b in  Sea_battle.letters:
            temp.append(a + b)                                                                                                   # –∫–ª–∞–¥—ë–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ —Å–ø–∏—Å–æ–∫
    while True:                                                                                                                  # –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è —Ü–∏–∫–ª, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        result = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—ã—Å—Ç—Ä–µ–ª–∞ (–ø—Ä–∏–º–µ—Ä: 1–ê, 2–ê ... 10–ö): ").upper()
        if result in temp:
            break
        else:            
            print("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.")
            print()
    return result

"""–§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ô –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–ò –ò–ì–†–û–í–û–ì–û –ü–†–û–¶–ï–°–°–ê –ü–û–õ–Ø –ò–ì–†–û–ö–ê (–ø–µ—Ä–≤–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –±—ã–ª–∞ –æ–ø–∏—Å–∞–Ω–∞ –≤ –∫–ª–∞—Å—Å–µ).
–§–£–ù–ö–¶–ò–Ø –í –ö–ê–ß–ï–°–¢–ï –ü–ê–†–ê–ú–ï–¢–†–ê –ü–†–ò–ù–ò–ú–ê–ï–¢ –û–ë–™–ï–ö–¢ –ö–õ–ê–°–°–ê "Sea_battle"."""
def function_visualization(player):
    WIDTH, HEIGHT = bext.size()                                                                                                  # –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —à–∏—Ä–∏–Ω—É –∏ –≤—ã—Å–æ—Ç—É —ç–∫—Ä–∞–Ω–∞ –≤ em-(–∞—Ö) (—ç—Ç–æ —Ä–∞–∑–º–µ—Ä —Å–∏–º–≤–æ–ª–∞) —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è bext
    bext.clear()                                                                                                                 # –æ—á–∏—Å—Ç–∏—Ç—å —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è bext
    bext.goto(int(WIDTH / 75), int(HEIGHT / 4))                                                                                  # –≤—ã–±–µ—Ä–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è bext
    bext.fg("red")                                                                                                               # –≤—ã–±–µ—Ä–µ–º —Ü–≤–µ—Ç –≤—ã–≤–æ–¥–∞ —à—Ä–∏—Ñ—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è bext
    print("–ü–û–õ–ï –ò–ì–†–û–ö–ê.\n")        
    player.show_field()                                                                                                          # –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –∏–≥—Ä–æ–∫–∞ –∏ –ø–æ–ª–µ –¥–ª—è –µ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω
    print()

"""–û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø"""
def function_main():
    """–í –≠–¢–û–ú –ë–õ–û–ö–ï –°–û–ó–î–ê–î–ò–ú –ò–ì–†–û–í–´–ï –ü–û–õ–Ø"""    
    player = Sea_battle()                                                                                                        # —Å–æ–∑–¥–∞–¥–∏–º –æ–±—ä–µ–∫—Ç—ã –∫–ª–∞—Å—Å–∞ "–∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ" –¥–ª—è –∏–≥—Ä–æ–∫–∞ 
    cpu = Sea_battle()                                                                                                           # —Å–æ–∑–¥–∞–¥–∏–º –æ–±—ä–µ–∫—Ç—ã –∫–ª–∞—Å—Å–∞ "–∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ" –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ 
    player.arrange_ships()                                                                                                       # –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª—è –¥–ª—è –∏–≥—Ä–æ–∫–∞ –∫–æ—Ä–∞–±–ª—è–º–∏
    cpu.arrange_ships()                                                                                                          # –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª—è –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∫–æ—Ä–∞–±–ª—è–º–∏   
    
    """–ó–ê–ü–£–°–ö –û–°–ù–û–í–ù–û–ì–û –¶–ò–ö–õ–ê –ò–ì–†–´""" 
    response  = "–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ"                                                                                                # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —É—Å–ª–æ–≤–∏—è –≤ –ø–æ–¥—Ü–∏–∫–ª–µ "–¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞"
    init_vert_horizontal = set()                                                                                                 # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è-–º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –∫–æ—Ä–∞–±–ª—è (–≤–µ—Ä—Ç–∏–∫–∞–ª—å –∏–ª–∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å)
    while True:                                                                                                                  # –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–µ—Ä–≤—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã
        win = False                                                                                                              # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –∏–≥—Ä–∞ –ø–æ–∫–∞ –µ—â—ë –Ω–µ –∑–∞–∫–æ–Ω—á–µ–Ω–∞

        """–ø–æ–¥—Ü–∏–∫–ª –¥–ª—è –∏–≥—Ä–æ–∫–∞, —Å–ª–µ–¥—É—é—â–∏–π –ø–æ–¥—Ü–∏–∫–ª –±—É–¥–µ—Ç –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞"""
        while True:                                                                                                              
            function_visualization(player)                                                                                       # —Ñ—É–Ω–∫—Ü–∏—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞, –ø–æ–ª–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –≤—ã–≤–æ–¥–∏—Ç—å –Ω–µ –Ω–∞–¥–æ                           
            shot_player = function_input_coordinates()                                                                           # —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤—ã—Å—Ç—Ä–µ–ª–∞ –æ—Ç –∏–≥—Ä–æ–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é, –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—É—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É
            cell_status = function_check_cell(cpu.field_ship, shot_player)                                                       # —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–µ—Ç–∫–∏ –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ–Ω–æ–≥–æ –ø–æ–ª—è —Å —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∫–æ—Ä–∞–±–ª–µ–π           
            if cell_status == Sea_battle.hit_icon or cell_status == Sea_battle.miss_icon:                                        # —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –≤ —ç—Ç—É –∫–ª–µ—Ç–∫—É —Ä–∞–Ω–µ–µ —É–∂–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–ª–∏ –≤—ã—Å—Ç—Ä–µ–ª, –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞
                playsound.playsound("2.1.15.task_error.mp3")
                print()
                input("–¢–∞–∫–æ–π –≤—ã—Å—Ç—Ä–µ–ª —Ä–∞–Ω–µ–µ –±—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω –∏–ª–∏ —ç—Ç–æ –∫–ª–µ—Ç–∫–∞ —Ä—è–¥–æ–º —Å –ø–æ—Ç–æ–ø–ª–µ–Ω–Ω—ã–º –∫–æ—Ä–∞–±–ª—ë–º. –ù–∞–∂–º–∏—Ç–µ <Enter> –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –≤–≤–æ–¥–∞. ")
                continue
            elif cell_status == Sea_battle.sea_icon or cell_status == Sea_battle.sea_icon_block:                                 # —Å–ª—É—á–∞–π, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤–æ–∑–º–æ–∂–Ω–∞ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∏ –ø–æ–ª—è —Ö–æ–¥–æ–≤ —É –∏–≥—Ä–æ–∫–∞
                package = Sea_battle.miss_icon                                                                                   # –≤–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –≤—ã—Å—Ç—Ä–µ–ª–∞
                playsound.playsound("2.1.15.task_–≤—ã—Å—Ç—Ä–µ–ª.mp3")
                playsound.playsound("2.1.15.task_–≤–æ–¥–∞.mp3")
            elif cell_status == Sea_battle.ship_icon:                                                                            # —Å–ª—É—á–∞–π, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤–æ–∑–º–æ–∂–Ω–∞ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∏ –ø–æ–ª—è —Ö–æ–¥–æ–≤ —É –∏–≥—Ä–æ–∫–∞
                package = Sea_battle.hit_icon                                                                                    # –≤–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –≤—ã—Å—Ç—Ä–µ–ª–∞           
                playsound.playsound("2.1.15.task_–≤—ã—Å—Ç—Ä–µ–ª.mp3")
                playsound.playsound("2.1.15.task_–ø–æ–ø–∞–¥–∞–Ω–∏–µ.mp3")
            player = fuction_mod_object_for_current_user_go(player, shot_player, package)                                        # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞ (—á–∞—Å—Ç–∏ –¥–ª—è —Ö–æ–¥–æ–≤) –∏ –∑–∞–º–µ–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º            
            cpu = fuction_mod_object_of_enemy_ship_field_for_go_current_user(cpu, shot_player, package)                          # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º –¥–ª—è cpu (—á–∞—Å—Ç–∏ –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π) –∏ –∑–∞–º–µ–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
            """–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —É–±–∏—Ç/–Ω–µ —É–±–∏—Ç"""
            temp_list = []
            for i in cpu.field_ship:
                temp_list = vertical_and_horizontal_neighborhood_check(i, cpu.field_ship, temp_list)    
            test = True if True not in temp_list else False                                                                      # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è, –µ—Å–ª–∏ –µ—Å—Ç—å —Ä—è–¥–æ–º '‚öì' –∏ '‚ùå', —Ç–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±—É–¥–µ—Ç False –∏ —Å–ª–µ–¥—É—é—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ–ª—å–∑—è          
            """–æ–±–Ω–æ–≤–∏–º –æ–±—ä–µ–∫—Ç cpu (—á–∞—Å—Ç—å –ø–æ–ª—è —Å –∫–æ—Ä–∞–±–ª—è–º–∏), –≤ —Å–ª—É—á–∞–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ—Ä–∞–±–ª–µ–π –≤–æ–∫—Ä—É–≥ —ç—Ç–∏—Ö –∫–ª–µ—Ç–æ–∫ —Å –∫–æ—Ä–∞–±–ª—ë–º
            –ø–æ—è–≤—è—Ç—Å—è "‚ö™"."""
            if test:                                                                                                             # –µ—Å–ª–∏ —Ä—è–¥–æ–º '‚öì' –∏ '‚ùå', —Ç–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
                for i in cpu.field_ship:
                    for_basic_case = []                                                                                          # —ç—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω—É–∂–Ω–∞ –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –æ —Ç–æ–º –∫–∞–∫–∏–µ –∫–ª–µ—Ç–∫–∏ —É–∂–µ –ø–æ—Å–µ—Ç–∏–ª–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ, –∏ –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å, –∞ –Ω–µ –≤ —Å–∞–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
                    cpu._field = determining_vertical_and_horizontal_neighbors(i, cpu.field_ship, for_basic_case)                # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Å –ø–æ–ª–µ–º –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É–±–∏—Ç –ª–∏ –∫–æ—Ä–∞–±–ª—å –∏ —Å—Ç–∞–≤–∞–∏—Ç "‚ö™" –≤–æ–∫—Ä—É–≥ —É–±–∏—Ç–æ–≥–æ –∫–æ—Ä–∞–±–ª—è
            """–æ–±–Ω–æ–≤–∏–º –æ–±—ä–µ–∫—Ç player (—á–∞—Å—Ç—å –ø–æ–ª—è –¥–ª—è —Ö–æ–¥–æ–≤), –≤ —Å–ª—É—á–∞–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ—Ä–∞–±–ª–µ–π –≤–æ–∫—Ä—É–≥ —ç—Ç–∏—Ö –∫–ª–µ—Ç–æ–∫ —Å –∫–æ—Ä–∞–±–ª—ë–º
            –ø–æ—è–≤—è—Ç—Å—è "‚ö™". –ü–µ—Ä–µ–Ω–µ—Å—ë–º "‚ö™" –∏–∑ cpu._field_ship –≤ player._field_ship_go."""
            temp_dict = dict()
            for a, b in cpu.field_ship.items():
                if b[1] == Sea_battle.miss_icon:
                    temp_dict[a] = b
            for a, b in temp_dict.items():
                player._field_go[a] = b            
            """–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã –∏–≥—Ä–æ–∫–∞, –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã"""
            check = set()
            for i in cpu.field_ship.values():
                if Sea_battle.ship_icon in i:
                    check.add(i[1])
            if Sea_battle.ship_icon not in check:
                win = True
                break
            """–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞"""
            if cpu.field_ship[shot_player][1] == Sea_battle.hit_icon:
                continue
            break

        """–ö–æ–Ω–µ—Ü –∏–≥—Ä—ã. –ü–æ–±–µ–¥–∞ –∏–≥—Ä–æ–∫–∞!!!"""
        if win:
            function_visualization(player)
            print("–ü–æ–±–µ–¥–∞!!!")
            playsound.playsound("2.1.15.task_–ø–æ–±–µ–¥–∞.mp3")
            break                                                                                                                # –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        
        """–ø–æ–¥—Ü–∏–∫–ª –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞"""
        while True:
            function_visualization(player)                                                                                       # —Ñ—É–Ω–∫—Ü–∏—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞, –ø–æ–ª–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –≤—ã–≤–æ–¥–∏—Ç—å –Ω–µ –Ω–∞–¥–æ ----------> (–ù–ê –ü–û–õ–ï –ò–ì–†–û–ö–ê –ë–£–î–£–¢ –í–ò–î–ù–´ –•–û–î–´ –ö–û–ú–ü–¢–Æ–¢–ï–†–ê!!!)                          
            if response == "–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ":                                                                                    # —É—Å–ª–æ–≤–∏–µ, –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ—Ä–∞–±–ª—å —É–±–∏—Ç –∏–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ö–æ–¥
                shot_cpu = function_input_coordinates_for_cpu(cpu.field_go)                                                      # —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–Ω–¥–æ–º–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—ã—Å—Ç—Ä–µ–ª cpu –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é, –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—É—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É, –≤ –∫–æ—Ç–æ—Ä—É—é —Ä–∞–Ω—å—à–µ –Ω–µ —Å—Ç—Ä–µ–ª—è–ª–∏
                cell_status = function_check_cell(player.field_ship, shot_cpu)                                                   # —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–µ—Ç–∫–∏ –¥–ª—è –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–µ —Å –∫–æ—Ä–∞–±–ª—è–º–∏
                if cell_status == Sea_battle.sea_icon or cell_status == Sea_battle.sea_icon_block:                               # —Å–ª—É—á–∞–π, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤–æ–∑–º–æ–∂–Ω–∞ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞ –∏ –ø–æ–ª—è —Ö–æ–¥–æ–≤ —É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
                    package = Sea_battle.miss_icon                                                                               # –≤–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –≤—ã—Å—Ç—Ä–µ–ª–∞
                elif cell_status == Sea_battle.ship_icon:                                                                        # —Å–ª—É—á–∞–π, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤–æ–∑–º–æ–∂–Ω–∞ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞ –∏ –ø–æ–ª—è —Ö–æ–¥–æ–≤ —É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
                    package = Sea_battle.hit_icon                                                                                # –≤–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –≤—ã—Å—Ç—Ä–µ–ª–∞          
                cpu = fuction_mod_object_for_current_user_go(cpu, shot_cpu, package)                                             # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ (—á–∞—Å—Ç–∏ –¥–ª—è —Ö–æ–¥–æ–≤) –∏ –∑–∞–º–µ–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
                player = fuction_mod_object_of_enemy_ship_field_for_go_current_user(player, shot_cpu, package)                   # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º –¥–ª—è –∏–≥—Ä–æ–∫–∞ (—á–∞—Å—Ç–∏ –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π) –∏ –∑–∞–º–µ–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
                """–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —É–±–∏—Ç/–Ω–µ —É–±–∏—Ç"""
                temp_list = []
                for i in player.field_ship:
                    temp_list = vertical_and_horizontal_neighborhood_check(i, player.field_ship, temp_list)    
                test = True if True not in temp_list else False                                                                  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è, –µ—Å–ª–∏ –µ—Å—Ç—å —Ä—è–¥–æ–º '‚öì' –∏ '‚ùå', —Ç–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±—É–¥–µ—Ç False –∏ —Å–ª–µ–¥—É—é—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ–ª—å–∑—è         
                """–æ–±–Ω–æ–≤–∏–º –æ–±—ä–µ–∫—Ç player (—á–∞—Å—Ç—å –ø–æ–ª—è —Å –∫–æ—Ä–∞–±–ª—è–º–∏), –≤ —Å–ª—É—á–∞–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ—Ä–∞–±–ª–µ–π –≤–æ–∫—Ä—É–≥ —ç—Ç–∏—Ö –∫–ª–µ—Ç–æ–∫ —Å –∫–æ—Ä–∞–±–ª—ë–º
                –ø–æ—è–≤—è—Ç—Å—è "‚ö™"."""
                if test:                                                                                                         # –µ—Å–ª–∏ —Ä—è–¥–æ–º '‚öì' –∏ '‚ùå', —Ç–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è                                                                                                         
                    for i in player.field_ship:
                        for_basic_case = []                                                                                      # —ç—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω—É–∂–Ω–∞ –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –æ —Ç–æ–º –∫–∞–∫–∏–µ –∫–ª–µ—Ç–∫–∏ —É–∂–µ –ø–æ—Å–µ—Ç–∏–ª–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ, –∏ –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å, –∞ –Ω–µ –≤ —Å–∞–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
                        player._field = determining_vertical_and_horizontal_neighbors(i, player.field_ship, for_basic_case)      # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Å –ø–æ–ª–µ–º –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É–±–∏—Ç –ª–∏ –∫–æ—Ä–∞–±–ª—å –∏ —Å—Ç–∞–≤–∞–∏—Ç "‚ö™" –≤–æ–∫—Ä—É–≥ —É–±–∏—Ç–æ–≥–æ –∫–æ—Ä–∞–±–ª—è
                """–æ–±–Ω–æ–≤–∏–º –æ–±—ä–µ–∫—Ç cpu (—á–∞—Å—Ç—å –ø–æ–ª—è –¥–ª—è —Ö–æ–¥–æ–≤), –≤ —Å–ª—É—á–∞–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ—Ä–∞–±–ª–µ–π –≤–æ–∫—Ä—É–≥ —ç—Ç–∏—Ö –∫–ª–µ—Ç–æ–∫ —Å –∫–æ—Ä–∞–±–ª—ë–º
                –ø–æ—è–≤—è—Ç—Å—è "‚ö™". –ü–µ—Ä–µ–Ω–µ—Å—ë–º "‚ö™" –∏–∑ player._field_ship –≤ cpu._field_ship_go."""
                temp_dict = dict()
                for a, b in player.field_ship.items():
                    if b[1] == Sea_battle.miss_icon:
                        temp_dict[a] = b
                for a, b in temp_dict.items():
                    cpu._field_go[a] = b            
                """–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã –∏–≥—Ä–æ–∫–∞, –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã"""
                check = set()
                for i in player.field_ship.values():
                    if Sea_battle.ship_icon in i:
                        check.add(i[1])
                if Sea_battle.ship_icon not in check:
                    win = True
                    break
                """–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —É–±–∏—Ç/–Ω–µ —É–±–∏—Ç ‚Ññ2. –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π response"""
                wounded_set = set()                                                                                              # –º–Ω–æ–∂–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç "—Ä–∞–Ω–µ–Ω" –∏ "–Ω–µ —Ä–∞–Ω–µ–Ω" –∏–ª–∏ —Ç–æ–ª—å–∫–æ "—Ä–∞–Ω–µ–Ω". 
                for point in player.field_ship:
                    result = vertical_and_horizontal_neighborhood_check_2(point, player.field_ship)                              # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–æ–¥–µ—Ä–∂–∏—Ç "—Ä–∞–Ω–µ–Ω" –∏ "–Ω–µ —Ä–∞–Ω–µ–Ω"
                    wounded_set = wounded_set | result                              
                if "—Ä–∞–Ω–µ–Ω" in wounded_set:
                    response = "–†–∞–Ω–µ–Ω. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å—Ç—Ä–µ–ª—è—Ç—å."
                else:
                    response = "–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ"
                """–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞"""
                if player.field_ship[shot_cpu][1] == Sea_battle.hit_icon:
                    continue
            
            elif response == "–†–∞–Ω–µ–Ω. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å—Ç—Ä–µ–ª—è—Ç—å.":                                                                      # —É—Å–ª–æ–≤–∏–µ, –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ—Ä–∞–±–ª—å —Ä–∞–Ω–µ–Ω
                shot_cpu_neighborhood_list = vertical_and_horizontal_neighborhood_check_3(shot_cpu)                              # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–∏—Å–æ–∫ —Å–æ—Å–µ–¥–µ–π –∫–ª–µ—Ç–∫–∏, –≤ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ
                for a, b in cpu.field_go.items():                                                                                # –≤ —Ü–∏–∫–ª–µ –≤—ã–∫–∏–Ω–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ shot_cpu_neighborhood_list –≤—Å–µ –Ω–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ–º–∞—Ö–∏
                    if b[1] == Sea_battle.miss_icon and a in shot_cpu_neighborhood_list:
                        shot_cpu_neighborhood_list.remove(a)
                """–Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é —Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä–∞–±–ª—è (–≤–µ—Ä—Ç–∏–∫–∞–ª—å –∏–ª–∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å)"""
                init_vert_horizontal.add(shot_cpu)                                                                               # –¥–æ–±–∞–≤–∏–º –ø–µ—Ä–≤—ã–π –≤—ã—Å—Ç—Ä–µ–ª –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
                for a, b in cpu.field_go.items():                                                                                # –≤ —Ü–∏–∫–ª–µ –¥–æ–±–∞–≤–∏–º –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤—Ç–æ—Ä—É—é –∫–ª–µ—Ç–∫—É —Å –ø–æ–ø–∞–¥–∞–Ω–∏–µ–º (–µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å), –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –∫–æ—Ä–∞–±–ª—è
                    if b[1] == Sea_battle.hit_icon and a in shot_cpu_neighborhood_list:
                        init_vert_horizontal.add(a)
                
                # –µ—Å–ª–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤—Å—ë –µ—â–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –∏ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, –∑–Ω–∞—á–∏—Ç –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è –∫–æ—Ä–∞–±–ª—è –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ (–æ–Ω –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è 2-—Ö –ø–∞–ª—É–±–Ω—ã–º –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è)
                if len(init_vert_horizontal) == 1:
                    shot_cpu_second = random.choice(shot_cpu_neighborhood_list)                                
                    cell_status = function_check_cell(player.field_ship, shot_cpu_second)                                        # —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–µ—Ç–∫–∏ –¥–ª—è –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–µ —Å –∫–æ—Ä–∞–±–ª—è–º–∏
                    if cell_status == Sea_battle.sea_icon or cell_status == Sea_battle.sea_icon_block:                           # —Å–ª—É—á–∞–π, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤–æ–∑–º–æ–∂–Ω–∞ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞ –∏ –ø–æ–ª—è —Ö–æ–¥–æ–≤ —É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
                        package = Sea_battle.miss_icon                                                                           # –≤–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –≤—ã—Å—Ç—Ä–µ–ª–∞
                    elif cell_status == Sea_battle.ship_icon:                                                                    # —Å–ª—É—á–∞–π, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤–æ–∑–º–æ–∂–Ω–∞ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞ –∏ –ø–æ–ª—è —Ö–æ–¥–æ–≤ —É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
                        package = Sea_battle.hit_icon                                                                            # –≤–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –≤—ã—Å—Ç—Ä–µ–ª–∞          
                    cpu = fuction_mod_object_for_current_user_go(cpu, shot_cpu_second, package)                                  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ (—á–∞—Å—Ç–∏ –¥–ª—è —Ö–æ–¥–æ–≤) –∏ –∑–∞–º–µ–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
                    player = fuction_mod_object_of_enemy_ship_field_for_go_current_user(player, shot_cpu_second, package)        # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º –¥–ª—è –∏–≥—Ä–æ–∫–∞ (—á–∞—Å—Ç–∏ –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π) –∏ –∑–∞–º–µ–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
                    """–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —É–±–∏—Ç/–Ω–µ —É–±–∏—Ç"""
                    temp_list = []
                    for i in player.field_ship:
                        temp_list = vertical_and_horizontal_neighborhood_check(i, player.field_ship, temp_list)    
                    test = True if True not in temp_list else False                                                              # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è, –µ—Å–ª–∏ –µ—Å—Ç—å —Ä—è–¥–æ–º '‚öì' –∏ '‚ùå', —Ç–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±—É–¥–µ—Ç False –∏ —Å–ª–µ–¥—É—é—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ–ª—å–∑—è         
                    """–æ–±–Ω–æ–≤–∏–º –æ–±—ä–µ–∫—Ç player (—á–∞—Å—Ç—å –ø–æ–ª—è —Å –∫–æ—Ä–∞–±–ª—è–º–∏), –≤ —Å–ª—É—á–∞–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ—Ä–∞–±–ª–µ–π –≤–æ–∫—Ä—É–≥ —ç—Ç–∏—Ö –∫–ª–µ—Ç–æ–∫ —Å –∫–æ—Ä–∞–±–ª—ë–º
                    –ø–æ—è–≤—è—Ç—Å—è "‚ö™"."""
                    if test:                                                                                                     # –µ—Å–ª–∏ —Ä—è–¥–æ–º '‚öì' –∏ '‚ùå', —Ç–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è                                                                                                         
                        for i in player.field_ship:
                            for_basic_case = []                                                                                  # —ç—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω—É–∂–Ω–∞ –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –æ —Ç–æ–º –∫–∞–∫–∏–µ –∫–ª–µ—Ç–∫–∏ —É–∂–µ –ø–æ—Å–µ—Ç–∏–ª–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ, –∏ –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å, –∞ –Ω–µ –≤ —Å–∞–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
                            player._field = determining_vertical_and_horizontal_neighbors(i, player.field_ship, for_basic_case)  # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Å –ø–æ–ª–µ–º –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É–±–∏—Ç –ª–∏ –∫–æ—Ä–∞–±–ª—å –∏ —Å—Ç–∞–≤–∞–∏—Ç "‚ö™" –≤–æ–∫—Ä—É–≥ —É–±–∏—Ç–æ–≥–æ –∫–æ—Ä–∞–±–ª—è
                    """–æ–±–Ω–æ–≤–∏–º –æ–±—ä–µ–∫—Ç cpu (—á–∞—Å—Ç—å –ø–æ–ª—è –¥–ª—è —Ö–æ–¥–æ–≤), –≤ —Å–ª—É—á–∞–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ—Ä–∞–±–ª–µ–π –≤–æ–∫—Ä—É–≥ —ç—Ç–∏—Ö –∫–ª–µ—Ç–æ–∫ —Å –∫–æ—Ä–∞–±–ª—ë–º
                    –ø–æ—è–≤—è—Ç—Å—è "‚ö™". –ü–µ—Ä–µ–Ω–µ—Å—ë–º "‚ö™" –∏–∑ player._field_ship –≤ cpu._field_ship_go."""
                    temp_dict = dict()
                    for a, b in player.field_ship.items():
                        if b[1] == Sea_battle.miss_icon:
                            temp_dict[a] = b
                    for a, b in temp_dict.items():
                        cpu._field_go[a] = b            
                    """–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã –∏–≥—Ä–æ–∫–∞, –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã"""
                    check = set()
                    for i in player.field_ship.values():
                        if Sea_battle.ship_icon in i:
                            check.add(i[1])
                    if Sea_battle.ship_icon not in check:
                        win = True
                        break
                    """–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —É–±–∏—Ç/–Ω–µ —É–±–∏—Ç ‚Ññ2. –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π response"""
                    wounded_set = set()                                                                                              # –º–Ω–æ–∂–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç "—Ä–∞–Ω–µ–Ω" –∏ "–Ω–µ —Ä–∞–Ω–µ–Ω" –∏–ª–∏ —Ç–æ–ª—å–∫–æ "—Ä–∞–Ω–µ–Ω". 
                    for point in player.field_ship:
                        result = vertical_and_horizontal_neighborhood_check_2(point, player.field_ship)                              # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–æ–¥–µ—Ä–∂–∏—Ç "—Ä–∞–Ω–µ–Ω" –∏ "–Ω–µ —Ä–∞–Ω–µ–Ω"
                        wounded_set = wounded_set | result                              
                    if "—Ä–∞–Ω–µ–Ω" in wounded_set:
                        response = "–†–∞–Ω–µ–Ω. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å—Ç—Ä–µ–ª—è—Ç—å."
                    else:
                        response = "–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ"
                    init_vert_horizontal = set()                                                                                     # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è-–º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –∫–æ—Ä–∞–±–ª—è (–Ω—É–∂–Ω–æ –µ—ë –æ–±–Ω—É–ª—è—Ç—å –≤ –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ —Ü–∏–∫–ª–∞, –æ–Ω–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç—Å—è –∑–∞–Ω–æ–≤–æ)               
                    """–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞"""
                    if player.field_ship[shot_cpu_second][1] == Sea_battle.hit_icon:
                        continue    
                     
                # –µ—Å–ª–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª–∏–Ω–Ω–æ–µ –∏ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∑–Ω–∞—á–∏—Ç –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –∫–æ—Ä–∞–±–ª—è —É–∂–µ –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å"""
                elif len(init_vert_horizontal) > 1:     
                    """–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –∫–æ—Ä–∞–±–ª—è"""
                    if list(init_vert_horizontal)[0][0] == list(init_vert_horizontal)[1][0]:
                        orientation = "horizontal"
                    elif list(init_vert_horizontal)[0][1] == list(init_vert_horizontal)[1][1]:
                        orientation = "vertical"
                    """–¥–≤–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–≤–æ—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è shot_cpu_second, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–µ–π"""
                    if orientation == "horizontal":
                        shot_cpu_second = horizontal_shot(cpu.field_go, shot_cpu)
                    else:
                        shot_cpu_second = vertical_shot(cpu.field_go, shot_cpu)
                    cell_status = function_check_cell(player.field_ship, shot_cpu_second)                                        # —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–µ—Ç–∫–∏ –¥–ª—è –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–µ —Å –∫–æ—Ä–∞–±–ª—è–º–∏
                    if cell_status == Sea_battle.sea_icon or cell_status == Sea_battle.sea_icon_block:                           # —Å–ª—É—á–∞–π, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤–æ–∑–º–æ–∂–Ω–∞ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞ –∏ –ø–æ–ª—è —Ö–æ–¥–æ–≤ —É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
                        package = Sea_battle.miss_icon                                                                           # –≤–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –≤—ã—Å—Ç—Ä–µ–ª–∞
                    elif cell_status == Sea_battle.ship_icon:                                                                    # —Å–ª—É—á–∞–π, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤–æ–∑–º–æ–∂–Ω–∞ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞ –∏ –ø–æ–ª—è —Ö–æ–¥–æ–≤ —É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
                        package = Sea_battle.hit_icon                                                                            # –≤–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –≤—ã—Å—Ç—Ä–µ–ª–∞          
                    cpu = fuction_mod_object_for_current_user_go(cpu, shot_cpu_second, package)                                  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ (—á–∞—Å—Ç–∏ –¥–ª—è —Ö–æ–¥–æ–≤) –∏ –∑–∞–º–µ–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
                    player = fuction_mod_object_of_enemy_ship_field_for_go_current_user(player, shot_cpu_second, package)        # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º –¥–ª—è –∏–≥—Ä–æ–∫–∞ (—á–∞—Å—Ç–∏ –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π) –∏ –∑–∞–º–µ–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
                    """–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —É–±–∏—Ç/–Ω–µ —É–±–∏—Ç"""
                    temp_list = []
                    for i in player.field_ship:
                        temp_list = vertical_and_horizontal_neighborhood_check(i, player.field_ship, temp_list)    
                    test = True if True not in temp_list else False                                                              # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è, –µ—Å–ª–∏ –µ—Å—Ç—å —Ä—è–¥–æ–º '‚öì' –∏ '‚ùå', —Ç–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±—É–¥–µ—Ç False –∏ —Å–ª–µ–¥—É—é—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ–ª—å–∑—è         
                    """–æ–±–Ω–æ–≤–∏–º –æ–±—ä–µ–∫—Ç player (—á–∞—Å—Ç—å –ø–æ–ª—è —Å –∫–æ—Ä–∞–±–ª—è–º–∏), –≤ —Å–ª—É—á–∞–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ—Ä–∞–±–ª–µ–π –≤–æ–∫—Ä—É–≥ —ç—Ç–∏—Ö –∫–ª–µ—Ç–æ–∫ —Å –∫–æ—Ä–∞–±–ª—ë–º
                    –ø–æ—è–≤—è—Ç—Å—è "‚ö™"."""
                    if test:                                                                                                     # –µ—Å–ª–∏ —Ä—è–¥–æ–º '‚öì' –∏ '‚ùå', —Ç–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è                                                                                                         
                        for i in player.field_ship:
                            for_basic_case = []                                                                                  # —ç—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω—É–∂–Ω–∞ –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –æ —Ç–æ–º –∫–∞–∫–∏–µ –∫–ª–µ—Ç–∫–∏ —É–∂–µ –ø–æ—Å–µ—Ç–∏–ª–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ, –∏ –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å, –∞ –Ω–µ –≤ —Å–∞–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
                            player._field = determining_vertical_and_horizontal_neighbors(i, player.field_ship, for_basic_case)  # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Å –ø–æ–ª–µ–º –¥–ª—è –∫–æ—Ä–∞–±–ª–µ–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É–±–∏—Ç –ª–∏ –∫–æ—Ä–∞–±–ª—å –∏ —Å—Ç–∞–≤–∞–∏—Ç "‚ö™" –≤–æ–∫—Ä—É–≥ —É–±–∏—Ç–æ–≥–æ –∫–æ—Ä–∞–±–ª—è
                    """–æ–±–Ω–æ–≤–∏–º –æ–±—ä–µ–∫—Ç cpu (—á–∞—Å—Ç—å –ø–æ–ª—è –¥–ª—è —Ö–æ–¥–æ–≤), –≤ —Å–ª—É—á–∞–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ—Ä–∞–±–ª–µ–π –≤–æ–∫—Ä—É–≥ —ç—Ç–∏—Ö –∫–ª–µ—Ç–æ–∫ —Å –∫–æ—Ä–∞–±–ª—ë–º
                    –ø–æ—è–≤—è—Ç—Å—è "‚ö™". –ü–µ—Ä–µ–Ω–µ—Å—ë–º "‚ö™" –∏–∑ player._field_ship –≤ cpu._field_ship_go."""
                    temp_dict = dict()
                    for a, b in player.field_ship.items():
                        if b[1] == Sea_battle.miss_icon:
                            temp_dict[a] = b
                    for a, b in temp_dict.items():
                        cpu._field_go[a] = b            
                    """–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã –∏–≥—Ä–æ–∫–∞, –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã"""
                    check = set()
                    for i in player.field_ship.values():
                        if Sea_battle.ship_icon in i:
                            check.add(i[1])
                    if Sea_battle.ship_icon not in check:
                        win = True
                        break
                    """–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —É–±–∏—Ç/–Ω–µ —É–±–∏—Ç ‚Ññ2. –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π response"""
                    wounded_set = set()                                                                                              # –º–Ω–æ–∂–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç "—Ä–∞–Ω–µ–Ω" –∏ "–Ω–µ —Ä–∞–Ω–µ–Ω" –∏–ª–∏ —Ç–æ–ª—å–∫–æ "—Ä–∞–Ω–µ–Ω". 
                    for point in player.field_ship:
                        result = vertical_and_horizontal_neighborhood_check_2(point, player.field_ship)                              # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–æ–¥–µ—Ä–∂–∏—Ç "—Ä–∞–Ω–µ–Ω" –∏ "–Ω–µ —Ä–∞–Ω–µ–Ω"
                        wounded_set = wounded_set | result                              
                    if "—Ä–∞–Ω–µ–Ω" in wounded_set:
                        response = "–†–∞–Ω–µ–Ω. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å—Ç—Ä–µ–ª—è—Ç—å."
                    else:
                        response = "–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ"
                    init_vert_horizontal = set()                                                                                     # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è-–º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –∫–æ—Ä–∞–±–ª—è (–Ω—É–∂–Ω–æ –µ—ë –æ–±–Ω—É–ª—è—Ç—å –≤ –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ —Ü–∏–∫–ª–∞, –æ–Ω–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç—Å—è –∑–∞–Ω–æ–≤–æ)               
                    """–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞"""
                    if player.field_ship[shot_cpu_second][1] == Sea_battle.hit_icon:
                        continue                    
            break
            
        """–ö–æ–Ω–µ—Ü –∏–≥—Ä—ã. –ü–æ–±–µ–¥–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞!!!"""
        if win:
            function_visualization(player)
            print("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!!!")
            playsound.playsound("2.1.15.task_game_over.mp3")
            break                                                                                                                # –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª 
        

if __name__ == "__main__":    
    print()
    print("–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é.")                                                                                            # —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ, —Ç.–∫. —ç–∫—Ä–∞–Ω –¥–∞–ª–µ–µ –±—É–¥–µ—Ç –æ—á–∏—â–µ–Ω —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è bext
    print()
    function_main()
else:    
    print()
    print("–°–∫—Ä–∏–ø—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω.")
    print()